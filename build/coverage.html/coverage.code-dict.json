{"/home/travis/build/npmtest/node-npmtest-xtemplate/test.js":"/* istanbul instrument in package npmtest_xtemplate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-xtemplate/lib.npmtest_xtemplate.js":"/* istanbul instrument in package npmtest_xtemplate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_xtemplate = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_xtemplate = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-xtemplate/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-xtemplate && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_xtemplate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_xtemplate\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_xtemplate.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_xtemplate.rollup.js'] =\n            local.assetsDict['/assets.npmtest_xtemplate.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_xtemplate.__dirname + '/lib.npmtest_xtemplate.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/index.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/**\n * simple facade for runtime and compiler\n */\n\nvar XTemplateRuntime = require('./runtime');\nvar util = XTemplateRuntime.util;\nvar Compiler = require('./compiler');\nvar _compile = Compiler.compile;\n\n/**\n * xtemplate engine\n *\n *      @example\n *      modulex.use('xtemplate', function(XTemplate){\n *          document.writeln(new XTemplate('{{title}}').render({title:2}));\n *      });\n *\n * @class XTemplate\n * @extends XTemplate.Runtime\n */\nfunction XTemplate(tpl_, config_) {\n  var tpl = tpl_;\n  var config = config_;\n  var tplType = typeof tpl === 'undefined' ? 'undefined' : _typeof(tpl);\n  if (tplType !== 'string' && tplType !== 'function') {\n    config = tpl;\n    tpl = undefined;\n  }\n  config = this.config = util.merge(XTemplate.globalConfig, config);\n  if (tplType === 'string') {\n    try {\n      tpl = this.compile(tpl, config.name);\n    } catch (err) {\n      this.compileError = err;\n    }\n  }\n  XTemplateRuntime.call(this, tpl, config);\n}\n\nfunction Noop() {}\n\nNoop.prototype = XTemplateRuntime.prototype;\nXTemplate.prototype = new Noop();\nXTemplate.prototype.constructor = XTemplate;\n\nutil.mix(XTemplate.prototype, {\n  compile: function compile(content, name) {\n    return _compile(content, name, this.config);\n  },\n  render: function render(data, option, callback_) {\n    var callback = callback_;\n    if (typeof option === 'function') {\n      callback = option;\n    }\n    var compileError = this.compileError;\n    if (compileError) {\n      if (callback) {\n        callback(compileError);\n      } else {\n        throw compileError;\n      }\n    } else {\n      return XTemplateRuntime.prototype.render.apply(this, arguments);\n    }\n  }\n});\n\nmodule.exports = util.mix(XTemplate, {\n  globalConfig: {},\n\n  config: XTemplateRuntime.config,\n\n  compile: _compile,\n\n  Compiler: Compiler,\n\n  Scope: XTemplateRuntime.Scope,\n\n  Runtime: XTemplateRuntime,\n\n  /**\n   * add command to all template\n   * @method\n   * @static\n   * @param {String} commandName\n   * @param {Function} fn\n   */\n  addCommand: XTemplateRuntime.addCommand,\n\n  /**\n   * remove command from all template by name\n   * @method\n   * @static\n   * @param {String} commandName\n   */\n  removeCommand: XTemplateRuntime.removeCommand\n});\n\n/*\n It consists three modules:\n\n -   xtemplate - Both compiler and runtime functionality.\n -   xtemplate/compiler - Compiler string template to module functions.\n -   xtemplate/runtime -  Runtime for string template( with xtemplate/compiler loaded)\n or template functions.\n\n xtemplate/compiler depends on xtemplate/runtime,\n because compiler needs to know about runtime to generate corresponding codes.\n */","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/runtime.js":"'use strict';\n\n/**\n * xtemplate runtime\n */\nvar util = require('./runtime/util');\nvar nativeCommands = require('./runtime/commands');\nvar commands = {};\nvar Scope = require('./runtime/scope');\nvar LinkedBuffer = require('./runtime/linked-buffer');\n\n// for performance: reduce hidden class\nfunction TplWrap(name, runtime, root, scope, buffer, originalName, fn, parent) {\n  this.name = name;\n  this.originalName = originalName || name;\n  this.runtime = runtime;\n  this.root = root;\n  // line counter\n  this.pos = { line: 1 };\n  this.scope = scope;\n  this.buffer = buffer;\n  this.fn = fn;\n  this.parent = parent;\n}\n\nfunction findCommand(runtimeCommands, instanceCommands, parts) {\n  var name = parts[0];\n  var cmd = runtimeCommands && runtimeCommands[name] || instanceCommands && instanceCommands[name] || commands[name];\n  if (parts.length === 1) {\n    return cmd;\n  }\n  if (cmd) {\n    var len = parts.length;\n    for (var i = 1; i < len; i++) {\n      cmd = cmd[parts[i]];\n      if (!cmd) {\n        return false;\n      }\n    }\n  }\n  return cmd;\n}\n\nfunction getSubNameFromParentName(parentName, subName) {\n  var parts = parentName.split('/');\n  var subParts = subName.split('/');\n  parts.pop();\n  for (var i = 0, l = subParts.length; i < l; i++) {\n    var subPart = subParts[i];\n    if (subPart === '.') {\n      continue;\n    } else if (subPart === '..') {\n      parts.pop();\n    } else {\n      parts.push(subPart);\n    }\n  }\n  return parts.join('/');\n}\n\n// depth: ../x.y() => 1\nfunction callFn(tpl, scope, option, buffer, parts, depth) {\n  var caller = void 0;\n  var fn = void 0;\n  var command1 = void 0;\n  if (!depth) {\n    command1 = findCommand(tpl.runtime.commands, tpl.root.config.commands, parts);\n  }\n  if (command1) {\n    return command1.call(tpl, scope, option, buffer);\n  } else if (command1 !== false) {\n    var callerParts = parts.slice(0, -1);\n    caller = scope.resolve(callerParts, depth);\n    if (caller === null || caller === undefined) {\n      buffer.error('Execute function `' + parts.join('.') + '` Error: ' + callerParts.join('.') + ' is undefined or null');\n      return buffer;\n    }\n    fn = caller[parts[parts.length - 1]];\n    if (fn) {\n      // apply(x, undefined) error in ie8\n      try {\n        return fn.apply(caller, option.params || []);\n      } catch (err) {\n        buffer.error('Execute function `' + parts.join('.') + '` Error: ' + err.message);\n        return buffer;\n      }\n    }\n  }\n  buffer.error('Command Not Found: ' + parts.join('.'));\n  return buffer;\n}\n\nvar utils = {\n  callFn: callFn,\n\n  // {{y().z()}}\n  callDataFn: function callDataFn(params, parts) {\n    var caller = parts[0];\n    var fn = caller;\n    for (var i = 1; i < parts.length; i++) {\n      var name = parts[i];\n      if (fn && fn[name]) {\n        caller = fn;\n        fn = fn[name];\n      } else {\n        return '';\n      }\n    }\n    return fn.apply(caller, params || []);\n  },\n  callCommand: function callCommand(tpl, scope, option, buffer, parts) {\n    return callFn(tpl, scope, option, buffer, parts);\n  }\n};\n\n/**\n * template file name for chrome debug\n *\n * @cfg {Boolean} name\n * @member XTemplate.Runtime\n */\n\n/**\n * XTemplate runtime. only accept tpl as function.\n * @class XTemplate.Runtime\n */\nfunction XTemplateRuntime(fn, config) {\n  this.fn = fn;\n  this.config = util.merge(XTemplateRuntime.globalConfig, config);\n  this.subNameResolveCache = {};\n  this.loadedSubTplNames = {};\n}\n\nutil.mix(XTemplateRuntime, {\n  Scope: Scope,\n\n  LinkedBuffer: LinkedBuffer,\n\n  globalConfig: {},\n\n  config: function config(key, v) {\n    var globalConfig = this.globalConfig;\n\n    if (key !== undefined) {\n      if (v !== undefined) {\n        globalConfig[key] = v;\n      } else {\n        util.mix(globalConfig, key);\n      }\n    } else {\n      return globalConfig;\n    }\n  },\n\n\n  nativeCommands: nativeCommands,\n\n  utils: utils,\n\n  util: util,\n\n  /**\n   * add command to all template\n   * @method\n   * @static\n   * @param {String} commandName\n   * @param {Function} fn\n   * @member XTemplate.Runtime\n   */\n  addCommand: function addCommand(commandName, fn) {\n    commands[commandName] = fn;\n  },\n\n\n  /**\n   * remove command from all template by name\n   * @method\n   * @static\n   * @param {String} commandName\n   * @member XTemplate.Runtime\n   */\n  removeCommand: function removeCommand(commandName) {\n    delete commands[commandName];\n  }\n});\n\nfunction resolve(root, subName_, parentName) {\n  var subName = subName_;\n  if (subName.charAt(0) !== '.') {\n    return subName;\n  }\n  var key = parentName + '_ks_' + subName;\n  var nameResolveCache = root.subNameResolveCache;\n  var cached = nameResolveCache[key];\n  if (cached) {\n    return cached;\n  }\n  subName = nameResolveCache[key] = getSubNameFromParentName(parentName, subName);\n  return subName;\n}\n\nfunction loadInternal(root, name, runtime, scope, buffer, originalName, escape, parentTpl) {\n  var tpl = new TplWrap(name, runtime, root, scope, buffer, originalName, undefined, parentTpl);\n  buffer.tpl = tpl;\n  root.config.loader.load(tpl, function (error, tplFn_) {\n    var tplFn = tplFn_;\n    if (typeof tplFn === 'function') {\n      tpl.fn = tplFn;\n      // reduce count of object field for performance\n      /* eslint no-use-before-define:0 */\n      renderTpl(tpl);\n    } else if (error) {\n      buffer.error(error);\n    } else {\n      tplFn = tplFn || '';\n      if (escape) {\n        buffer.writeEscaped(tplFn);\n      } else {\n        buffer.data += tplFn;\n      }\n      buffer.end();\n    }\n  });\n}\n\nfunction includeInternal(root, scope, escape, buffer, tpl, originalName) {\n  var name = resolve(root, originalName, tpl.name);\n  var newBuffer = buffer.insert();\n  var next = newBuffer.next;\n  loadInternal(root, name, tpl.runtime, scope, newBuffer, originalName, escape, buffer.tpl);\n  return next;\n}\n\nfunction includeModuleInternal(root, scope, buffer, tpl, tplFn) {\n  var newBuffer = buffer.insert();\n  var next = newBuffer.next;\n  var newTpl = new TplWrap(tplFn.TPL_NAME, tpl.runtime, root, scope, newBuffer, undefined, tplFn, buffer.tpl);\n  newBuffer.tpl = newTpl;\n  renderTpl(newTpl);\n  return next;\n}\n\nfunction renderTpl(tpl) {\n  var buffer = tpl.fn();\n  // tpl.fn exception\n  if (buffer) {\n    var runtime = tpl.runtime;\n    var extendTpl = runtime.extendTpl;\n    var extendTplName = void 0;\n    if (extendTpl) {\n      extendTplName = extendTpl.params[0];\n      if (!extendTplName) {\n        return buffer.error('extend command required a non-empty parameter');\n      }\n    }\n    var extendTplFn = runtime.extendTplFn;\n    var extendTplBuffer = runtime.extendTplBuffer;\n    // if has extend statement, only parse\n    if (extendTplFn) {\n      runtime.extendTpl = null;\n      runtime.extendTplBuffer = null;\n      runtime.extendTplFn = null;\n      includeModuleInternal(tpl.root, tpl.scope, extendTplBuffer, tpl, extendTplFn).end();\n    } else if (extendTplName) {\n      runtime.extendTpl = null;\n      runtime.extendTplBuffer = null;\n      includeInternal(tpl.root, tpl.scope, 0, extendTplBuffer, tpl, extendTplName).end();\n    }\n    return buffer.end();\n  }\n}\n\nfunction getIncludeScope(scope, option, buffer) {\n  var params = option.params;\n  if (!params[0]) {\n    return buffer.error('include command required a non-empty parameter');\n  }\n  var newScope = scope;\n  var newScopeData = params[1];\n  var hash = option.hash;\n  if (hash) {\n    if (newScopeData) {\n      newScopeData = util.mix({}, newScopeData);\n    } else {\n      newScopeData = {};\n    }\n    util.mix(newScopeData, hash);\n  }\n  // sub template scope\n  if (newScopeData) {\n    newScope = new Scope(newScopeData, undefined, scope);\n  }\n  return newScope;\n}\n\nfunction checkIncludeOnce(root, option, tpl) {\n  var originalName = option.params[0];\n  var name = resolve(root, originalName, tpl.name);\n  var loadedSubTplNames = root.loadedSubTplNames;\n\n  if (loadedSubTplNames[name]) {\n    return false;\n  }\n  loadedSubTplNames[name] = true;\n  return true;\n}\n\nXTemplateRuntime.prototype = {\n  constructor: XTemplateRuntime,\n\n  Scope: Scope,\n\n  nativeCommands: nativeCommands,\n\n  utils: utils,\n\n  /**\n   * remove command by name\n   * @param commandName\n   */\n  removeCommand: function removeCommand(commandName) {\n    var config = this.config;\n    if (config.commands) {\n      delete config.commands[commandName];\n    }\n  },\n\n\n  /**\n   * add command definition to current template\n   * @param commandName\n   * @param {Function} fn command definition\n   */\n  addCommand: function addCommand(commandName, fn) {\n    var config = this.config;\n    config.commands = config.commands || {};\n    config.commands[commandName] = fn;\n  },\n  include: function include(scope, option, buffer, tpl) {\n    return includeInternal(this, getIncludeScope(scope, option, buffer), option.escape, buffer, tpl, option.params[0]);\n  },\n  includeModule: function includeModule(scope, option, buffer, tpl) {\n    return includeModuleInternal(this, getIncludeScope(scope, option, buffer), buffer, tpl, option.params[0]);\n  },\n  includeOnce: function includeOnce(scope, option, buffer, tpl) {\n    if (checkIncludeOnce(this, option, tpl)) {\n      return this.include(scope, option, buffer, tpl);\n    }\n    return buffer;\n  },\n  includeOnceModule: function includeOnceModule(scope, option, buffer, tpl) {\n    if (checkIncludeOnce(this, option, tpl)) {\n      return this.includeModule(scope, option, buffer, tpl);\n    }\n    return buffer;\n  },\n\n\n  /**\n   * get result by merge data with template\n   */\n  render: function render(data, option_, callback_) {\n    var _this = this;\n\n    var option = option_;\n    var callback = callback_;\n    var html = '';\n    var fn = this.fn;\n    var config = this.config;\n    if (typeof option === 'function') {\n      callback = option;\n      option = null;\n    }\n    option = option || {};\n    if (!callback) {\n      callback = function callback(error_, ret) {\n        var error = error_;\n        if (error) {\n          if (!(error instanceof Error)) {\n            error = new Error(error);\n          }\n          throw error;\n        }\n        html = ret;\n      };\n    }\n    var name = this.config.name;\n    if (!name && fn && fn.TPL_NAME) {\n      name = fn.TPL_NAME;\n    }\n    var scope = void 0;\n    if (data instanceof Scope) {\n      scope = data;\n    } else {\n      scope = new Scope(data);\n    }\n    var buffer = new LinkedBuffer(callback, config).head;\n    var tpl = new TplWrap(name, {\n      commands: option.commands\n    }, this, scope, buffer, name, fn);\n    buffer.tpl = tpl;\n    if (!fn) {\n      config.loader.load(tpl, function (err, fn2) {\n        if (fn2) {\n          tpl.fn = _this.fn = fn2;\n          renderTpl(tpl);\n        } else if (err) {\n          buffer.error(err);\n        }\n      });\n      return html;\n    }\n    renderTpl(tpl);\n    return html;\n  }\n};\n\nmodule.exports = XTemplateRuntime;\n\n/**\n * @ignore\n *\n * 2012-09-12 yiminghe@gmail.com\n *  - 参考 velocity, 扩充 ast\n *  - Expression/ConditionalOrExpression\n *  - EqualityExpression/RelationalExpression...\n *\n * 2012-09-11 yiminghe@gmail.com\n *  - 初步完成，添加 tc\n *\n * 对比 template\n *\n *  优势\n *      - 不会莫名其妙报错（with）\n *      - 更多出错信息，直接给出行号\n *      - 更容易扩展 command, sub-tpl\n *      - 支持子模板\n *      - 支持作用域链: ..\\x ..\\..\\y\n *      - 内置 escapeHtml 支持\n *      - 支持预编译\n *      - 支持简单表达式 +-/%* ()\n *      - 支持简单比较 === !===\n *      - 支持类似函数的嵌套命令\n *   劣势\n *      - 不支持完整 js 语法\n */","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/runtime/util.js":"'use strict';\n\n// http://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\n// http://wonko.com/post/html-escaping\n\nvar escapeHtml = require('escape-html');\n\nvar SUBSTITUTE_REG = /\\\\?\\{([^{}]+)\\}/g;\nvar win = typeof global !== 'undefined' ? global : window;\n\nvar util = void 0;\nvar toString = Object.prototype.toString;\nmodule.exports = util = {\n  isArray: Array.isArray || function isArray(obj) {\n    return toString.call(obj) === '[object Array]';\n  },\n\n  keys: Object.keys || function keys(o) {\n    var result = [];\n    var p = void 0;\n\n    for (p in o) {\n      if (o.hasOwnProperty(p)) {\n        result.push(p);\n      }\n    }\n\n    return result;\n  },\n\n  each: function each(object, fn) {\n    var context = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n    if (object) {\n      var key = void 0;\n      var val = void 0;\n      var keys = void 0;\n      var i = 0;\n      var length = object && object.length;\n      // do not use typeof obj == 'function': bug in phantomjs\n      var isObj = length === undefined || Object.prototype.toString.call(object) === '[object Function]';\n\n      if (isObj) {\n        keys = util.keys(object);\n        for (; i < keys.length; i++) {\n          key = keys[i];\n          // can not use hasOwnProperty\n          if (fn.call(context, object[key], key, object) === false) {\n            break;\n          }\n        }\n      } else {\n        for (val = object[0]; i < length; val = object[++i]) {\n          if (fn.call(context, val, i, object) === false) {\n            break;\n          }\n        }\n      }\n    }\n    return object;\n  },\n  mix: function mix(t, s) {\n    if (s) {\n      for (var p in s) {\n        if (s.hasOwnProperty(p)) {\n          t[p] = s[p];\n        }\n      }\n    }\n    return t;\n  },\n  globalEval: function globalEval(data) {\n    if (win.execScript) {\n      win.execScript(data);\n    } else {\n      /* eslint wrap-iife:0 */\n      (function run(d) {\n        win.eval.call(win, d);\n      })(data);\n    }\n  },\n  substitute: function substitute(str, o, regexp) {\n    if (typeof str !== 'string' || !o) {\n      return str;\n    }\n\n    return str.replace(regexp || SUBSTITUTE_REG, function (match, name) {\n      if (match.charAt(0) === '\\\\') {\n        return match.slice(1);\n      }\n      return o[name] === undefined ? '' : o[name];\n    });\n  },\n\n\n  escapeHtml: escapeHtml,\n\n  merge: function merge() {\n    var i = 0;\n    var len = arguments.length;\n    var ret = {};\n    for (; i < len; i++) {\n      var arg = arguments.length <= i + 0 ? undefined : arguments[i + 0];\n      if (arg) {\n        util.mix(ret, arg);\n      }\n    }\n    return ret;\n  }\n};","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/runtime/commands.js":"'use strict';\n\n/**\n * native commands for xtemplate.\n */\n\nvar Scope = require('./scope');\nvar util = require('./util');\nvar commands = {\n  // range(start, stop, [step])\n  range: function range(scope, option) {\n    var params = option.params;\n    var start = params[0];\n    var end = params[1];\n    var step = params[2];\n    if (!step) {\n      step = start > end ? -1 : 1;\n    } else if (start > end && step > 0 || start < end && step < 0) {\n      step = -step;\n    }\n    var ret = [];\n    for (var i = start; start < end ? i < end : i > end; i += step) {\n      ret.push(i);\n    }\n    return ret;\n  },\n  \"void\": function _void() {\n    return undefined;\n  },\n  foreach: function foreach(scope, option, buffer_) {\n    var buffer = buffer_;\n    var params = option.params;\n    var param0 = params[0];\n    var xindexName = params[2] || 'xindex';\n    var valueName = params[1];\n    var xcount = void 0;\n    var opScope = void 0;\n    var affix = void 0;\n    var xindex = void 0;\n    if (param0) {\n      xcount = param0.length;\n      for (xindex = 0; xindex < xcount; xindex++) {\n        opScope = new Scope(param0[xindex], {\n          xcount: xcount,\n          xindex: xindex\n        }, scope);\n        affix = opScope.affix;\n        if (xindexName !== 'xindex') {\n          affix[xindexName] = xindex;\n          affix.xindex = undefined;\n        }\n        if (valueName) {\n          affix[valueName] = param0[xindex];\n        }\n        buffer = option.fn(opScope, buffer);\n      }\n    }\n    return buffer;\n  },\n  forin: function forin(scope, option, buffer_) {\n    var buffer = buffer_;\n    var params = option.params;\n    var param0 = params[0];\n    var xindexName = params[2] || 'xindex';\n    var valueName = params[1];\n    var opScope = void 0;\n    var affix = void 0;\n    var name = void 0;\n    // if undefined, will emit warning by compiler\n    if (param0) {\n      for (name in param0) {\n        if (param0.hasOwnProperty(name)) {\n          opScope = new Scope(param0[name], {\n            xindex: name\n          }, scope);\n          affix = opScope.affix;\n          if (xindexName !== 'xindex') {\n            affix[xindexName] = name;\n            affix.xindex = undefined;\n          }\n          if (valueName) {\n            affix[valueName] = param0[name];\n          }\n          buffer = option.fn(opScope, buffer);\n        }\n      }\n    }\n    return buffer;\n  },\n  each: function each(scope, option, buffer) {\n    var params = option.params;\n    var param0 = params[0];\n    if (param0) {\n      if (util.isArray(param0)) {\n        return commands.foreach(scope, option, buffer);\n      }\n      return commands.forin(scope, option, buffer);\n    }\n    return buffer;\n  },\n  'with': function _with(scope, option, buffer_) {\n    var buffer = buffer_;\n    var params = option.params;\n    var param0 = params[0];\n    if (param0) {\n      // skip object check for performance\n      var opScope = new Scope(param0, undefined, scope);\n      buffer = option.fn(opScope, buffer);\n    }\n    return buffer;\n  },\n  'if': function _if(scope, option, buffer_) {\n    var buffer = buffer_;\n    var params = option.params;\n    var param0 = params[0];\n    if (param0) {\n      var fn = option.fn;\n      if (fn) {\n        buffer = fn(scope, buffer);\n      }\n    } else {\n      var matchElseIf = false;\n      var elseIfs = option.elseIfs;\n      var inverse = option.inverse;\n      if (elseIfs) {\n        for (var i = 0, len = elseIfs.length; i < len; i++) {\n          var elseIf = elseIfs[i];\n          matchElseIf = elseIf.test(scope);\n          if (matchElseIf) {\n            buffer = elseIf.fn(scope, buffer);\n            break;\n          }\n        }\n      }\n      if (!matchElseIf && inverse) {\n        buffer = inverse(scope, buffer);\n      }\n    }\n    return buffer;\n  },\n  set: function set(scope_, option, buffer) {\n    var scope = scope_;\n    var hash = option.hash;\n    var len = hash.length;\n    for (var i = 0; i < len; i++) {\n      var h = hash[i];\n      var parts = h.key;\n      var depth = h.depth;\n      var value = h.value;\n      if (parts.length === 1) {\n        var root = scope.root;\n        while (depth && root !== scope) {\n          scope = scope.parent;\n          --depth;\n        }\n        scope.set(parts[0], value);\n      } else {\n        var last = scope.resolve(parts.slice(0, -1), depth);\n        if (last) {\n          last[parts[parts.length - 1]] = value;\n        }\n      }\n    }\n    return buffer;\n  },\n\n\n  include: 1,\n\n  includeOnce: 1,\n\n  parse: 1,\n\n  extend: 1,\n\n  block: function block(scope, option, buffer_) {\n    var buffer = buffer_;\n    var self = this;\n    var runtime = self.runtime;\n    var params = option.params;\n    var blockName = params[0];\n    var type = void 0;\n    if (params.length === 2) {\n      type = params[0];\n      blockName = params[1];\n    }\n    var blocks = runtime.blocks = runtime.blocks || {};\n    var head = blocks[blockName];\n    var cursor = void 0;\n    var current = {\n      fn: option.fn,\n      type: type\n    };\n    if (!head) {\n      blocks[blockName] = current;\n    } else if (head.type) {\n      if (head.type === 'append') {\n        current.next = head;\n        blocks[blockName] = current;\n      } else if (head.type === 'prepend') {\n        var prev = void 0;\n        cursor = head;\n        while (cursor && cursor.type === 'prepend') {\n          prev = cursor;\n          cursor = cursor.next;\n        }\n        current.next = cursor;\n        prev.next = current;\n      }\n    }\n\n    if (!runtime.extendTpl) {\n      cursor = blocks[blockName];\n      while (cursor) {\n        if (cursor.fn) {\n          buffer = cursor.fn.call(self, scope, buffer);\n        }\n        cursor = cursor.next;\n      }\n    }\n\n    return buffer;\n  },\n  macro: function macro(scope, option, buffer_) {\n    var buffer = buffer_;\n    var hash = option.hash;\n    var params = option.params;\n    var macroName = params[0];\n    var params1 = params.slice(1);\n    var self = this;\n    var runtime = self.runtime;\n    var macros = runtime.macros = runtime.macros || {};\n    var macro = macros[macroName];\n    // definition\n    if (option.fn) {\n      macros[macroName] = {\n        paramNames: params1,\n        hash: hash,\n        fn: option.fn\n      };\n    } else if (macro) {\n      var paramValues = macro.hash || {};\n      var paramNames = macro.paramNames;\n      if (paramNames) {\n        for (var i = 0, len = paramNames.length; i < len; i++) {\n          var p = paramNames[i];\n          paramValues[p] = params1[i];\n        }\n      }\n      if (hash) {\n        for (var h in hash) {\n          if (hash.hasOwnProperty(h)) {\n            paramValues[h] = hash[h];\n          }\n        }\n      }\n      var newScope = new Scope(paramValues);\n      // https://github.com/xtemplate/xtemplate/issues/29\n      newScope.root = scope.root;\n      // no caller Scope\n      buffer = macro.fn.call(self, newScope, buffer);\n    } else {\n      var error = 'can not find macro: ' + macroName;\n      buffer.error(error);\n    }\n    return buffer;\n  }\n};\n\ncommands[\"debugger\"] = function debuggerFn() {\n  util.globalEval('debugger');\n};\n\nmodule.exports = commands;","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/runtime/scope.js":"'use strict';\n\n/**\n * scope resolution for xtemplate like function in javascript but keep original data unmodified\n */\n\nfunction Scope(data, affix, parent) {\n  if (data !== undefined) {\n    this.data = data;\n  } else {\n    this.data = {};\n  }\n  if (parent) {\n    this.parent = parent;\n    this.root = parent.root;\n  } else {\n    this.parent = undefined;\n    this.root = this;\n  }\n  this.affix = affix || {};\n  this.ready = false;\n}\n\nScope.prototype = {\n  isScope: 1,\n\n  constructor: Scope,\n\n  setParent: function setParent(parentScope) {\n    this.parent = parentScope;\n    this.root = parentScope.root;\n  },\n\n\n  // keep original data unmodified\n  set: function set(name, value) {\n    this.affix[name] = value;\n  },\n  setData: function setData(data) {\n    this.data = data;\n  },\n  getData: function getData() {\n    return this.data;\n  },\n  mix: function mix(v) {\n    var affix = this.affix;\n    for (var name in v) {\n      if (v.hasOwnProperty(name)) {\n        affix[name] = v[name];\n      }\n    }\n  },\n  get: function get(name) {\n    var data = this.data;\n    var v = void 0;\n    var affix = this.affix;\n\n    if (data !== null && data !== undefined) {\n      v = data[name];\n    }\n\n    if (v !== undefined) {\n      return v;\n    }\n\n    return affix[name];\n  },\n  resolveInternalOuter: function resolveInternalOuter(parts) {\n    var part0 = parts[0];\n    var v = void 0;\n    var self = this;\n    var scope = self;\n    if (part0 === 'this') {\n      v = self.data;\n    } else if (part0 === 'root') {\n      scope = scope.root;\n      v = scope.data;\n    } else if (part0) {\n      /* eslint no-cond-assign:0 */\n      do {\n        v = scope.get(part0);\n      } while (v === undefined && (scope = scope.parent));\n    } else {\n      return [scope.data];\n    }\n    return [undefined, v];\n  },\n  resolveInternal: function resolveInternal(parts) {\n    var ret = this.resolveInternalOuter(parts);\n    if (ret.length === 1) {\n      return ret[0];\n    }\n    var i = void 0;\n    var len = parts.length;\n    var v = ret[1];\n    if (v === undefined) {\n      return undefined;\n    }\n    for (i = 1; i < len; i++) {\n      if (v === null || v === undefined) {\n        return v;\n      }\n      v = v[parts[i]];\n    }\n    return v;\n  },\n  resolveLooseInternal: function resolveLooseInternal(parts) {\n    var ret = this.resolveInternalOuter(parts);\n    if (ret.length === 1) {\n      return ret[0];\n    }\n    var i = void 0;\n    var len = parts.length;\n    var v = ret[1];\n    for (i = 1; v !== null && v !== undefined && i < len; i++) {\n      v = v[parts[i]];\n    }\n    return v;\n  },\n  resolveUp: function resolveUp(parts) {\n    return this.parent && this.parent.resolveInternal(parts);\n  },\n  resolveLooseUp: function resolveLooseUp(parts) {\n    return this.parent && this.parent.resolveLooseInternal(parts);\n  },\n  resolveOuter: function resolveOuter(parts, d) {\n    var self = this;\n    var scope = self;\n    var depth = d;\n    var v = void 0;\n    if (!depth && parts.length === 1) {\n      v = self.get(parts[0]);\n      if (v !== undefined) {\n        return [v];\n      }\n      depth = 1;\n    }\n    if (depth) {\n      while (scope && depth--) {\n        scope = scope.parent;\n      }\n    }\n    if (!scope) {\n      return [undefined];\n    }\n    return [undefined, scope];\n  },\n  resolveLoose: function resolveLoose(parts, depth) {\n    var ret = this.resolveOuter(parts, depth);\n    if (ret.length === 1) {\n      return ret[0];\n    }\n    return ret[1].resolveLooseInternal(parts);\n  },\n  resolve: function resolve(parts, depth) {\n    var ret = this.resolveOuter(parts, depth);\n    if (ret.length === 1) {\n      return ret[0];\n    }\n    return ret[1].resolveInternal(parts);\n  }\n};\n\nmodule.exports = Scope;","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/runtime/linked-buffer.js":"'use strict';\n\n/**\n * LinkedBuffer of generate content from xtemplate\n */\nvar util = require('./util');\n\nfunction Buffer(list, next, tpl) {\n  this.list = list;\n  this.init();\n  this.next = next;\n  this.ready = false;\n  // tpl belongs\n  this.tpl = tpl;\n}\n\nBuffer.prototype = {\n  constructor: Buffer,\n\n  isBuffer: 1,\n\n  init: function init() {\n    this.data = '';\n  },\n  append: function append(data) {\n    this.data += data;\n    return this;\n  },\n  write: function write(data) {\n    // ignore null or undefined\n    if (data !== null && data !== undefined) {\n      if (data.isBuffer) {\n        return data;\n      }\n      this.data += data;\n    }\n    return this;\n  },\n  writeEscaped: function writeEscaped(data) {\n    // ignore null or undefined\n    if (data !== null && data !== undefined) {\n      if (data.isBuffer) {\n        return data;\n      }\n      this.data += util.escapeHtml(data);\n    }\n    return this;\n  },\n  insert: function insert() {\n    var self = this;\n    var list = self.list;\n    var tpl = self.tpl;\n    var nextFragment = new Buffer(list, self.next, tpl);\n    var asyncFragment = new Buffer(list, nextFragment, tpl);\n    self.next = asyncFragment;\n    self.ready = true;\n    return asyncFragment;\n  },\n  async: function async(fn) {\n    var asyncFragment = this.insert();\n    var nextFragment = asyncFragment.next;\n    fn(asyncFragment);\n    return nextFragment;\n  },\n  error: function error(e_) {\n    var callback = this.list.callback;\n    var e = e_;\n    if (callback) {\n      var tpl = this.tpl;\n      if (tpl) {\n        if (!(e instanceof Error)) {\n          e = new Error(e);\n        }\n        var name = tpl.name;\n        var line = tpl.pos.line;\n        var errorStr = 'XTemplate error in file: ' + name + ' at line ' + line + ': ';\n        try {\n          // phantomjs\n          e.stack = errorStr + e.stack;\n          e.message = errorStr + e.message;\n        } catch (e2) {\n          // empty\n        }\n        e.xtpl = {\n          pos: {\n            line: line\n          },\n          name: name\n        };\n      }\n      this.list.callback = null;\n      callback(e, undefined);\n    }\n  },\n  end: function end() {\n    var self = this;\n    if (self.list.callback) {\n      self.ready = true;\n      self.list.flush();\n    }\n    return self;\n  }\n};\n\nfunction LinkedBuffer(callback, config) {\n  var self = this;\n  self.config = config;\n  self.head = new Buffer(self, undefined);\n  self.callback = callback;\n  this.init();\n}\n\nLinkedBuffer.prototype = {\n  constructor: LinkedBuffer,\n\n  init: function init() {\n    this.data = '';\n  },\n  append: function append(data) {\n    this.data += data;\n  },\n  end: function end() {\n    this.callback(null, this.data);\n    this.callback = null;\n  },\n  flush: function flush() {\n    var self = this;\n    var fragment = self.head;\n    while (fragment) {\n      if (fragment.ready) {\n        this.data += fragment.data;\n      } else {\n        self.head = fragment;\n        return;\n      }\n      fragment = fragment.next;\n    }\n    self.end();\n  }\n};\n\nLinkedBuffer.Buffer = Buffer;\n\nmodule.exports = LinkedBuffer;\n\n/**\n * 2014-06-19 yiminghe@gmail.com\n * string concat is faster than array join: 85ms<-> 131ms\n */","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/compiler.js":"'use strict';\n\n/**\n * translate ast to js function code\n */\n\nvar XTemplateRuntime = require('./runtime');\nvar parser = require('./compiler/parser');\nparser.yy = require('./compiler/ast');\nvar util = XTemplateRuntime.util;\nvar nativeCommands = XTemplateRuntime.nativeCommands;\nvar nativeUtils = XTemplateRuntime.utils;\n\nvar compilerTools = require('./compiler/tools');\nvar pushToArray = compilerTools.pushToArray;\nvar wrapByDoubleQuote = compilerTools.wrapByDoubleQuote;\nvar convertIdPartsToRawAccessor = compilerTools.convertIdPartsToRawAccessor;\nvar wrapBySingleQuote = compilerTools.wrapBySingleQuote;\nvar escapeString = compilerTools.escapeString;\nvar chainedVariableRead = compilerTools.chainedVariableRead;\n// codeTemplates --------------------------- start\n\nvar TMP_DECLARATION = ['var t;'];\nfor (var i = 0; i < 10; i++) {\n  TMP_DECLARATION.push('var t' + i + ';');\n}\nvar TOP_DECLARATION = TMP_DECLARATION.concat(['var tpl = this;\\n  var root = tpl.root;\\n  var buffer = tpl.buffer;\\n  var scope = tpl.scope;\\n  var runtime = tpl.runtime;\\n  var name = tpl.name;\\n  var pos = tpl.pos;\\n  var data = scope.data;\\n  var affix = scope.affix;\\n  var nativeCommands = root.nativeCommands;\\n  var utils = root.utils;']).join('\\n');\nvar CALL_NATIVE_COMMAND = '{lhs} = {name}Command.call(tpl, scope, {option}, buffer);';\nvar CALL_CUSTOM_COMMAND = 'buffer = callCommandUtil(tpl, scope, {option}, buffer, {idParts});';\nvar CALL_FUNCTION = '{lhs} = callFnUtil(tpl, scope, {option}, buffer, {idParts});';\nvar CALL_DATA_FUNCTION = '{lhs} = callDataFnUtil([{params}], {idParts});';\nvar CALL_FUNCTION_DEPTH = '{lhs} = callFnUtil(tpl, scope, {option}, buffer, {idParts}, {depth});';\nvar ASSIGN_STATEMENT = 'var {lhs} = {value};';\nvar SCOPE_RESOLVE_DEPTH = 'var {lhs} = scope.resolve({idParts},{depth});';\nvar SCOPE_RESOLVE_LOOSE_DEPTH = 'var {lhs} = scope.resolveLoose({idParts},{depth});';\nvar FUNC = 'function {functionName}({params}){\\n  {body}\\n}';\nvar SOURCE_URL = '\\n  //# sourceURL = {name}.js\\n';\nvar DECLARE_NATIVE_COMMANDS = 'var {name}Command = nativeCommands[\"{name}\"];';\nvar DECLARE_UTILS = 'var {name}Util = utils[\"{name}\"];';\nvar BUFFER_WRITE = 'buffer = buffer.write({value});';\nvar BUFFER_APPEND = 'buffer.data += {value};';\nvar BUFFER_WRITE_ESCAPED = 'buffer = buffer.writeEscaped({value});';\nvar RETURN_BUFFER = 'return buffer;';\n// codeTemplates ---------------------------- end\n\nvar nativeCode = [];\nvar substitute = util.substitute;\nvar each = util.each;\n\neach(nativeUtils, function (v, name) {\n  nativeCode.push(substitute(DECLARE_UTILS, {\n    name: name\n  }));\n});\n\neach(nativeCommands, function (v, name) {\n  nativeCode.push(substitute(DECLARE_NATIVE_COMMANDS, {\n    name: name\n  }));\n});\n\nnativeCode = nativeCode.join('\\n');\n\nvar lastLine = 1;\n\nfunction markLine(pos, source) {\n  if (lastLine === pos.line) {\n    return;\n  }\n  lastLine = pos.line;\n  source.push('pos.line = ' + pos.line + ';');\n}\n\nfunction resetGlobal() {\n  lastLine = 1;\n}\n\nfunction getFunctionDeclare(functionName) {\n  return ['function ' + functionName + '(scope, buffer, undefined) {\\n    var data = scope.data;\\n    var affix = scope.affix;'];\n}\n\nfunction guid(self, str) {\n  return str + self.uuid++;\n}\n\nfunction considerSuffix(n, withSuffix) {\n  var name = n;\n  if (withSuffix && !/\\.xtpl$/.test(name)) {\n    name += '.xtpl';\n  }\n  return name;\n}\n\nfunction opExpression(e) {\n  var source = [];\n  var type = e.opType;\n  var exp1 = void 0;\n  var exp2 = void 0;\n  var exp3 = void 0;\n  var code1Source = void 0;\n  var code2Source = void 0;\n  var code3Source = void 0;\n  var code3 = void 0;\n  var code1 = this[e.op1.type](e.op1);\n  var code2 = this[e.op2.type](e.op2);\n  var exp = guid(this, 'exp');\n  exp1 = code1.exp;\n  exp2 = code2.exp;\n  code1Source = code1.source;\n  code2Source = code2.source;\n  if (e.op3) {\n    code3 = this[e.op3.type](e.op3);\n    exp3 = code3.exp;\n    code3Source = code3.source;\n  }\n  pushToArray(source, code1Source);\n  source.push('var ' + exp + ' = ' + exp1 + ';');\n  if (type === '&&' || type === '||') {\n    source.push('if(' + (type === '&&' ? '' : '!') + '(' + exp + ')){');\n    pushToArray(source, code2Source);\n    source.push(exp + ' = ' + exp2 + ';');\n    source.push('}');\n  } else if (type === '?:') {\n    pushToArray(source, code2Source);\n    pushToArray(source, code3Source);\n    source.push(exp + ' = (' + exp1 + ') ? (' + exp2 + ') : (' + exp3 + ');');\n  } else {\n    pushToArray(source, code2Source);\n    source.push(exp + ' = (' + exp1 + ') ' + type + ' (' + exp2 + ');');\n  }\n  return {\n    exp: exp,\n    source: source\n  };\n}\n\nfunction genFunction(self, statements) {\n  var functionName = guid(self, 'func');\n  var source = getFunctionDeclare(functionName);\n  var statement = void 0;\n  for (var _i = 0, len = statements.length; _i < len; _i++) {\n    statement = statements[_i];\n    pushToArray(source, self[statement.type](statement).source);\n  }\n  source.push(RETURN_BUFFER);\n  source.push('}');\n  // avoid deep closure for performance\n  pushToArray(self.functionDeclares, source);\n  return functionName;\n}\n\nfunction genConditionFunction(self, condition) {\n  var functionName = guid(self, 'func');\n  var source = getFunctionDeclare(functionName);\n  var gen = self[condition.type](condition);\n  pushToArray(source, gen.source);\n  source.push('return ' + gen.exp + ';');\n  source.push('}');\n  pushToArray(self.functionDeclares, source);\n  return functionName;\n}\n\nfunction genTopFunction(self, statements) {\n  var catchError = self.config.catchError;\n  var source = [\n  // 'function run(tpl) {',\n  TOP_DECLARATION, nativeCode,\n  // decrease speed by 10%\n  // for performance\n  catchError ? 'try {' : ''];\n  var statement = void 0;\n  var i = void 0;\n  var len = void 0;\n  for (i = 0, len = statements.length; i < len; i++) {\n    statement = statements[i];\n    pushToArray(source, self[statement.type](statement, {\n      top: 1\n    }).source);\n  }\n  source.splice.apply(source, [2, 0].concat(self.functionDeclares).concat(''));\n  source.push(RETURN_BUFFER);\n  // source.push('}');\n  // source.push('function tryRun(tpl) {');\n  // source.push('try {');\n  // source.push('ret = run(this);');\n  if (catchError) {\n    source.push.apply(source, ['} catch(e) {', 'if(!e.xtpl){', 'buffer.error(e);', '}else{ throw e; }', '}']);\n  }\n  //    source.push('}');\n  //    source.push('return tryRun(this);');\n  return {\n    params: ['undefined'],\n    source: source.join('\\n')\n  };\n}\n\nfunction genOptionFromFunction(self, func, escape, fn, elseIfs, inverse) {\n  var source = [];\n  var params = func.params;\n  var hash = func.hash;\n  var funcParams = [];\n  var isSetFunction = func.id.string === 'set';\n  if (params) {\n    each(params, function (param) {\n      var nextIdNameCode = self[param.type](param);\n      pushToArray(source, nextIdNameCode.source);\n      funcParams.push(nextIdNameCode.exp);\n    });\n  }\n  var funcHash = [];\n  if (hash) {\n    each(hash.value, function (h) {\n      var v = h[1];\n      var key = h[0];\n      var vCode = self[v.type](v);\n      pushToArray(source, vCode.source);\n      if (isSetFunction) {\n        // support  {{set(x.y.z=1)}}\n        // https://github.com/xtemplate/xtemplate/issues/54\n        var resolvedParts = convertIdPartsToRawAccessor(self, source, key.parts).resolvedParts;\n        funcHash.push({ key: resolvedParts, depth: key.depth, value: vCode.exp });\n      } else {\n        if (key.parts.length !== 1 || typeof key.parts[0] !== 'string') {\n          throw new Error('invalid hash parameter');\n        }\n        funcHash.push([wrapByDoubleQuote(key.string), vCode.exp]);\n      }\n    });\n  }\n  var exp = '';\n  // literal init array, do not use arr.push for performance\n  if (funcParams.length || funcHash.length || escape || fn || inverse || elseIfs) {\n    if (escape) {\n      exp += ', escape: 1';\n    }\n    if (funcParams.length) {\n      exp += ', params: [ ' + funcParams.join(',') + ' ]';\n    }\n    if (funcHash.length) {\n      (function () {\n        var hashStr = [];\n        if (isSetFunction) {\n          util.each(funcHash, function (h) {\n            hashStr.push('{ key: [' + h.key.join(',') + '], value: ' + h.value + ', depth: ' + h.depth + ' }');\n          });\n          exp += ',hash: [ ' + hashStr.join(',') + ' ]';\n        } else {\n          util.each(funcHash, function (h) {\n            hashStr.push(h[0] + ':' + h[1]);\n          });\n          exp += ',hash: { ' + hashStr.join(',') + ' }';\n        }\n      })();\n    }\n    if (fn) {\n      exp += ',fn: ' + fn;\n    }\n    if (inverse) {\n      exp += ',inverse: ' + inverse;\n    }\n    if (elseIfs) {\n      exp += ',elseIfs: ' + elseIfs;\n    }\n    exp = '{ ' + exp.slice(1) + ' }';\n  }\n  return {\n    exp: exp || '{}',\n    funcParams: funcParams,\n    source: source\n  };\n}\n\nfunction generateFunction(self, func, block, escape_) {\n  var escape = escape_;\n  var source = [];\n  markLine(func.pos, source);\n  var functionConfigCode = void 0;\n  var idName = void 0;\n  var id = func.id;\n  var idString = id.string;\n  if (idString in nativeCommands) {\n    escape = 0;\n  }\n  var idParts = id.parts;\n  var i = void 0;\n  if (idString === 'elseif') {\n    return {\n      exp: '',\n      source: []\n    };\n  }\n  if (block) {\n    var programNode = block.program;\n    var inverse = programNode.inverse;\n    var fnName = void 0;\n    var elseIfsName = void 0;\n    var inverseName = void 0;\n    var elseIfs = [];\n    var elseIf = void 0;\n    var functionValue = void 0;\n    var statement = void 0;\n    var statements = programNode.statements;\n    var thenStatements = [];\n    for (i = 0; i < statements.length; i++) {\n      statement = statements[i];\n      /* eslint no-cond-assign:0 */\n      if (statement.type === 'expressionStatement' && (functionValue = statement.value) && (functionValue = functionValue.parts) && functionValue.length === 1 && (functionValue = functionValue[0]) && functionValue.type === 'function' && functionValue.id.string === 'elseif') {\n        if (elseIf) {\n          elseIfs.push(elseIf);\n        }\n        elseIf = {\n          condition: functionValue.params[0],\n          statements: []\n        };\n      } else if (elseIf) {\n        elseIf.statements.push(statement);\n      } else {\n        thenStatements.push(statement);\n      }\n    }\n    if (elseIf) {\n      elseIfs.push(elseIf);\n    }\n    // find elseIfs\n    fnName = genFunction(self, thenStatements);\n    if (inverse) {\n      inverseName = genFunction(self, inverse);\n    }\n    if (elseIfs.length) {\n      var elseIfsVariable = [];\n      for (i = 0; i < elseIfs.length; i++) {\n        var elseIfStatement = elseIfs[i];\n        var conditionName = genConditionFunction(self, elseIfStatement.condition);\n        elseIfsVariable.push('{\\n        test: ' + conditionName + ',\\n        fn: ' + genFunction(self, elseIfStatement.statements) + '\\n        }');\n      }\n      elseIfsName = '[ ' + elseIfsVariable.join(',') + ' ]';\n    }\n    functionConfigCode = genOptionFromFunction(self, func, escape, fnName, elseIfsName, inverseName);\n    pushToArray(source, functionConfigCode.source);\n  }\n\n  var _self$config = self.config;\n  var isModule = _self$config.isModule;\n  var withSuffix = _self$config.withSuffix;\n\n\n  if (idString === 'include' || idString === 'parse' || idString === 'extend') {\n    if (!func.params || func.params.length > 2) {\n      throw new Error('include/parse/extend can only has at most two parameter!');\n    }\n  }\n\n  if (isModule) {\n    if (idString === 'include' || idString === 'parse') {\n      var name = considerSuffix(func.params[0].value, withSuffix);\n      func.params[0] = { type: 'raw', value: 'require' + '(\"' + name + '\")' };\n    }\n  }\n\n  if (!functionConfigCode) {\n    functionConfigCode = genOptionFromFunction(self, func, escape, null, null, null);\n    pushToArray(source, functionConfigCode.source);\n  }\n\n  if (!block) {\n    idName = guid(self, 'callRet');\n    source.push('var ' + idName);\n  }\n\n  if (idString in nativeCommands) {\n    if (idString === 'extend') {\n      source.push('runtime.extendTpl = ' + functionConfigCode.exp);\n      source.push('buffer = buffer.async(\\n      function(newBuffer){runtime.extendTplBuffer = newBuffer;}\\n      );');\n      if (isModule) {\n        var _name = considerSuffix(func.params[0].value, withSuffix);\n        source.push('runtime.extendTplFn = ' + 'require' + '(\"' + _name + '\");');\n      }\n    } else if (idString === 'include') {\n      source.push('buffer = root.' + (isModule ? 'includeModule' : 'include') + '(scope, ' + functionConfigCode.exp + ', buffer,tpl);');\n    } else if (idString === 'includeOnce') {\n      source.push('buffer = root.' + (isModule ? 'includeOnceModule' : 'includeOnce') + '(scope, ' + functionConfigCode.exp + ', buffer,tpl);');\n    } else if (idString === 'parse') {\n      source.push('buffer = root.' + (isModule ? 'includeModule' : 'include') + '(new scope.constructor(), ' + functionConfigCode.exp + ', buffer, tpl);');\n    } else {\n      source.push(substitute(CALL_NATIVE_COMMAND, {\n        lhs: block ? 'buffer' : idName,\n        name: idString,\n        option: functionConfigCode.exp\n      }));\n    }\n  } else if (block) {\n    source.push(substitute(CALL_CUSTOM_COMMAND, {\n      option: functionConfigCode.exp,\n      idParts: convertIdPartsToRawAccessor(self, source, idParts).arr\n    }));\n  } else {\n    var resolveParts = convertIdPartsToRawAccessor(self, source, idParts);\n    // {{x.y().q.z()}}\n    // do not need scope resolution, call data function directly\n    if (resolveParts.funcRet) {\n      source.push(substitute(CALL_DATA_FUNCTION, {\n        lhs: idName,\n        params: functionConfigCode.funcParams.join(','),\n        idParts: resolveParts.arr,\n        depth: id.depth\n      }));\n    } else {\n      source.push(substitute(id.depth ? CALL_FUNCTION_DEPTH : CALL_FUNCTION, {\n        lhs: idName,\n        option: functionConfigCode.exp,\n        idParts: resolveParts.arr,\n        depth: id.depth\n      }));\n    }\n  }\n\n  return {\n    exp: idName,\n    source: source\n  };\n}\n\nfunction AstToJSProcessor(config) {\n  this.functionDeclares = [];\n  this.config = config;\n  this.uuid = 0;\n}\n\nAstToJSProcessor.prototype = {\n  constructor: AstToJSProcessor,\n\n  raw: function raw(_raw) {\n    return {\n      exp: _raw.value\n    };\n  },\n  arrayExpression: function arrayExpression(e) {\n    var list = e.list;\n    var len = list.length;\n    var r = void 0;\n    var source = [];\n    var exp = [];\n    for (var _i2 = 0; _i2 < len; _i2++) {\n      r = this[list[_i2].type](list[_i2]);\n      pushToArray(source, r.source);\n      exp.push(r.exp);\n    }\n    return {\n      exp: '[ ' + exp.join(',') + ' ]',\n      source: source\n    };\n  },\n  objectExpression: function objectExpression(e) {\n    var obj = e.obj;\n    var len = obj.length;\n    var r = void 0;\n    var source = [];\n    var exp = [];\n    for (var _i3 = 0; _i3 < len; _i3++) {\n      var item = obj[_i3];\n      r = this[item[1].type](item[1]);\n      pushToArray(source, r.source);\n      exp.push(wrapByDoubleQuote(item[0]) + ': ' + r.exp);\n    }\n    return {\n      exp: '{ ' + exp.join(',') + ' }',\n      source: source\n    };\n  },\n\n\n  conditionalExpression: opExpression,\n\n  conditionalOrExpression: opExpression,\n\n  conditionalAndExpression: opExpression,\n\n  relationalExpression: opExpression,\n\n  equalityExpression: opExpression,\n\n  additiveExpression: opExpression,\n\n  multiplicativeExpression: opExpression,\n\n  unaryExpression: function unaryExpression(e) {\n    var code = this[e.value.type](e.value);\n    return {\n      exp: e.unaryType + '(' + code.exp + ')',\n      source: code.source\n    };\n  },\n  string: function string(e) {\n    // same as contentNode.value\n    return {\n      exp: wrapBySingleQuote(escapeString(e.value, 1)),\n      source: []\n    };\n  },\n  number: function number(e) {\n    return {\n      exp: e.value,\n      source: []\n    };\n  },\n  id: function id(idNode) {\n    var source = [];\n    var self = this;\n    var loose = !self.config.strict;\n    markLine(idNode.pos, source);\n    if (compilerTools.isGlobalId(idNode)) {\n      return {\n        exp: idNode.string,\n        source: source\n      };\n    }\n    var depth = idNode.depth;\n    var idParts = idNode.parts;\n    var idName = guid(self, 'id');\n    if (depth) {\n      source.push(substitute(loose ? SCOPE_RESOLVE_LOOSE_DEPTH : SCOPE_RESOLVE_DEPTH, {\n        lhs: idName,\n        idParts: convertIdPartsToRawAccessor(self, source, idParts).arr,\n        depth: depth\n      }));\n      return {\n        exp: idName,\n        source: source\n      };\n    }\n    var part0 = idParts[0];\n    var remain = void 0;\n    var remainParts = void 0;\n    if (part0 === 'this') {\n      remainParts = idParts.slice(1);\n      source.push(substitute(ASSIGN_STATEMENT, {\n        lhs: idName,\n        value: remainParts.length ? chainedVariableRead(self, source, remainParts, undefined, undefined, loose) : 'data'\n      }));\n      return {\n        exp: idName,\n        source: source\n      };\n    } else if (part0 === 'root') {\n      remainParts = idParts.slice(1);\n      remain = remainParts.join('.');\n      if (remain) {\n        remain = '.' + remain;\n      }\n      source.push(substitute(ASSIGN_STATEMENT, {\n        lhs: idName,\n        value: remain ? chainedVariableRead(self, source, remainParts, true, undefined, loose) : 'scope.root.data',\n        idParts: remain\n      }));\n      return {\n        exp: idName,\n        source: source\n      };\n    }\n    // {{x.y().z}}\n    if (idParts[0].type === 'function') {\n      var resolvedParts = convertIdPartsToRawAccessor(self, source, idParts).resolvedParts;\n      for (var _i4 = 1; _i4 < resolvedParts.length; _i4++) {\n        resolvedParts[_i4] = '[ ' + resolvedParts[_i4] + ' ]';\n      }\n      var value = void 0;\n      if (loose) {\n        value = compilerTools.genStackJudge(resolvedParts.slice(1), resolvedParts[0]);\n      } else {\n        value = resolvedParts[0];\n        for (var ri = 1; ri < resolvedParts.length; ri++) {\n          value += resolvedParts[ri];\n        }\n      }\n      source.push(substitute(ASSIGN_STATEMENT, {\n        lhs: idName,\n        value: value\n      }));\n    } else {\n      source.push(substitute(ASSIGN_STATEMENT, {\n        lhs: idName,\n        value: chainedVariableRead(self, source, idParts, false, true, loose)\n      }));\n    }\n    return {\n      exp: idName,\n      source: source\n    };\n  },\n  'function': function _function(func, escape) {\n    return generateFunction(this, func, false, escape);\n  },\n  blockStatement: function blockStatement(block) {\n    return generateFunction(this, block.func, block);\n  },\n  expressionStatement: function expressionStatement(_expressionStatement) {\n    var source = [];\n    var escape = _expressionStatement.escape;\n    var code = void 0;\n    var expression = _expressionStatement.value;\n    var type = expression.type;\n    var expressionOrVariable = void 0;\n    code = this[type](expression, escape);\n    pushToArray(source, code.source);\n    expressionOrVariable = code.exp;\n    source.push(substitute(escape ? BUFFER_WRITE_ESCAPED : BUFFER_WRITE, {\n      value: expressionOrVariable\n    }));\n    return {\n      exp: '',\n      source: source\n    };\n  },\n  contentStatement: function contentStatement(_contentStatement) {\n    return {\n      exp: '',\n      source: [substitute(BUFFER_APPEND, {\n        value: wrapBySingleQuote(escapeString(_contentStatement.value, 0))\n      })]\n    };\n  }\n};\n\nvar anonymousCount = 0;\n\n/**\n * compiler for xtemplate\n * @class XTemplate.Compiler\n * @singleton\n */\nvar compiler = {\n  /**\n   * get ast of template\n   * @param {String} [name] xtemplate name\n   * @param {String} tplContent\n   * @return {Object}\n   */\n  parse: function parse(tplContent, name) {\n    if (tplContent) {\n      var ret = void 0;\n      try {\n        ret = parser.parse(tplContent, name);\n      } catch (err) {\n        var e = void 0;\n        if (err instanceof Error) {\n          e = err;\n        } else {\n          e = new Error(err);\n        }\n        var errorStr = 'XTemplate error ';\n        try {\n          e.stack = errorStr + e.stack;\n          e.message = errorStr + e.message;\n        } catch (e2) {\n          // empty\n        }\n        throw e;\n      }\n      return ret;\n    }\n    return {\n      statements: []\n    };\n  },\n  compileToStr: function compileToStr(param) {\n    var func = compiler.compileToJson(param);\n    return substitute(FUNC, {\n      functionName: param.functionName || '',\n      params: func.params.join(','),\n      body: func.source\n    });\n  },\n\n  /**\n   * get template function json format\n   * @param {String} [param.name] xtemplate name\n   * @param {String} param.content\n   * @param {Boolean} [param.isModule] whether generated function is used in module\n   * @param {Boolean} [param.withSuffix] whether generated require name with suffix xtpl\n   * @param {Boolean} [param.catchError] whether to try catch generated function to\n   * provide good error message\n   * @param {Boolean} [param.strict] whether to generate strict function\n   * @return {Object}\n   */\n  compileToJson: function compileToJson(param) {\n    resetGlobal();\n    var name = param.name = param.name || 'xtemplate' + ++anonymousCount;\n    var content = param.content;\n    var root = compiler.parse(content, name);\n    return genTopFunction(new AstToJSProcessor(param), root.statements);\n  },\n\n  /**\n   * get template function\n   * @param {String} tplContent\n   * @param {String} name template file name\n   * @param {Object} config\n   * @return {Function}\n   */\n  compile: function compile(tplContent, name, config) {\n    var code = compiler.compileToJson(util.merge(config, {\n      content: tplContent,\n      name: name\n    }));\n    var source = code.source;\n    source += substitute(SOURCE_URL, {\n      name: name\n    });\n    var args = code.params.concat(source);\n    // eval is not ok for eval(\"(function(){})\") ie\n    return Function.apply(null, args);\n  }\n};\n\nmodule.exports = compiler;\n\n/*\n todo:\n need oop, new Source().this()\n */","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/compiler/parser.js":"'use strict';/*\n  Generated by kison.\n*/var parser=function(undefined){/*jshint quotmark:false, loopfunc:true, indent:false, unused:false, asi:true, boss:true*//* Generated by kison */var parser={};var GrammarConst={'SHIFT_TYPE':1,'REDUCE_TYPE':2,'ACCEPT_TYPE':0,'TYPE_INDEX':0,'PRODUCTION_INDEX':1,'TO_INDEX':2};function peekStack(stack,n){n=n||1;return stack[stack.length-n];}/*jslint quotmark: false*//*jslint quotmark: false*/function mix(to,from){for(var f in from){to[f]=from[f];}}function isArray(obj){return'[object Array]'===Object.prototype.toString.call(obj);}function each(object,fn,context){if(object){var key,val,length,i=0;context=context||null;if(!isArray(object)){for(key in object){// can not use hasOwnProperty\nif(fn.call(context,object[key],key,object)===false){break;}}}else{length=object.length;for(val=object[0];i<length;val=object[++i]){if(fn.call(context,val,i,object)===false){break;}}}}}function inArray(item,arr){for(var i=0,l=arr.length;i<l;i++){if(arr[i]===item){return true;}}return false;}var Lexer=function Lexer(cfg){var self=this;/*\n     lex rules.\n     @type {Object[]}\n     @example\n     [\n     {\n     regexp:'\\\\w+',\n     state:['xx'],\n     token:'c',\n     // this => lex\n     action:function(){}\n     }\n     ]\n     *//*\n     lex rules.\n     @type {Object[]}\n     @example\n     [\n     {\n     regexp:'\\\\w+',\n     state:['xx'],\n     token:'c',\n     // this => lex\n     action:function(){}\n     }\n     ]\n     */self.rules=[];mix(self,cfg);/*\n     Input languages\n     @type {String}\n     *//*\n     Input languages\n     @type {String}\n     */self.resetInput(self.input);};Lexer.prototype={'resetInput':function resetInput(input){mix(this,{input:input,matched:'',stateStack:[Lexer.STATIC.INITIAL],match:'',text:'',firstLine:1,lineNumber:1,lastLine:1,firstColumn:1,lastColumn:1});},'getCurrentRules':function getCurrentRules(){var self=this,currentState=self.stateStack[self.stateStack.length-1],rules=[];//#JSCOVERAGE_IF\n//#JSCOVERAGE_IF\nif(self.mapState){currentState=self.mapState(currentState);}each(self.rules,function(r){var state=r.state||r[3];if(!state){if(currentState===Lexer.STATIC.INITIAL){rules.push(r);}}else if(inArray(currentState,state)){rules.push(r);}});return rules;},'pushState':function pushState(state){this.stateStack.push(state);},'popState':function popState(num){num=num||1;var ret;while(num--){ret=this.stateStack.pop();}return ret;},'showDebugInfo':function showDebugInfo(){var self=this,DEBUG_CONTEXT_LIMIT=Lexer.STATIC.DEBUG_CONTEXT_LIMIT,matched=self.matched,match=self.match,input=self.input;matched=matched.slice(0,matched.length-match.length);//#JSCOVERAGE_IF 0\n//#JSCOVERAGE_IF 0\nvar past=(matched.length>DEBUG_CONTEXT_LIMIT?'...':'')+matched.slice(0-DEBUG_CONTEXT_LIMIT).replace(/\\n/g,' '),next=match+input;//#JSCOVERAGE_ENDIF\n//#JSCOVERAGE_ENDIF\nnext=next.slice(0,DEBUG_CONTEXT_LIMIT).replace(/\\n/g,' ')+(next.length>DEBUG_CONTEXT_LIMIT?'...':'');return past+next+'\\n'+new Array(past.length+1).join('-')+'^';},'mapSymbol':function mapSymbolForCodeGen(t){return this.symbolMap[t];},'mapReverseSymbol':function mapReverseSymbol(rs){var self=this,symbolMap=self.symbolMap,i,reverseSymbolMap=self.reverseSymbolMap;if(!reverseSymbolMap&&symbolMap){reverseSymbolMap=self.reverseSymbolMap={};for(i in symbolMap){reverseSymbolMap[symbolMap[i]]=i;}}//#JSCOVERAGE_IF\n//#JSCOVERAGE_IF\nif(reverseSymbolMap){return reverseSymbolMap[rs];}else{return rs;}},'lex':function lex(){var self=this,input=self.input,i,rule,m,ret,lines,rules=self.getCurrentRules();self.match=self.text='';if(!input){return self.mapSymbol(Lexer.STATIC.END_TAG);}for(i=0;i<rules.length;i++){rule=rules[i];//#JSCOVERAGE_IF 0\n//#JSCOVERAGE_IF 0\nvar regexp=rule.regexp||rule[1],token=rule.token||rule[0],action=rule.action||rule[2]||undefined;//#JSCOVERAGE_ENDIF\n//#JSCOVERAGE_ENDIF\nif(m=input.match(regexp)){lines=m[0].match(/\\n.*/g);if(lines){self.lineNumber+=lines.length;}mix(self,{firstLine:self.lastLine,lastLine:self.lineNumber,firstColumn:self.lastColumn,lastColumn:lines?lines[lines.length-1].length-1:self.lastColumn+m[0].length});var match;// for error report\n// for error report\nmatch=self.match=m[0];// all matches\n// all matches\nself.matches=m;// may change by user\n// may change by user\nself.text=match;// matched content utils now\n// matched content utils now\nself.matched+=match;ret=action&&action.call(self);if(ret===undefined){ret=token;}else{ret=self.mapSymbol(ret);}input=input.slice(match.length);self.input=input;if(ret){return ret;}else{// ignore\nreturn self.lex();}}}}};Lexer.STATIC={'INITIAL':'I','DEBUG_CONTEXT_LIMIT':20,'END_TAG':'$EOF'};var lexer=new Lexer({'rules':[[0,/^[\\s\\S]*?(?={{)/,function(){var self=this,text=self.text,m,n=0;if(m=text.match(/\\\\+$/)){n=m[0].length;}if(n%2){self.pushState('et');text=text.slice(0,-1);}else{self.pushState('t');}if(n){text=text.replace(/\\\\+$/g,function(m){return new Array(m.length/2+1).join('\\\\');});}// https://github.com/kissyteam/kissy/issues/330\n// return even empty\n// https://github.com/kissyteam/kissy/issues/330\n// return even empty\nself.text=text;return'CONTENT';}],['b',/^[\\s\\S]+/,0],['b',/^[\\s\\S]{2,}?(?:(?={{)|$)/,function popState(){this.popState();},['et']],['c',/^{{\\{?~?(?:#|@)/,function(){var self=this,text=self.text;if(text.slice(0,3)==='{{{'){self.pushState('p');}else{self.pushState('e');}},['t']],['d',/^{{\\{?~?\\//,function(){var self=this,text=self.text;if(text.slice(0,3)==='{{{'){self.pushState('p');}else{self.pushState('e');}},['t']],['e',/^{{\\s*else\\s*}}/,function popState(){this.popState();},['t']],[0,/^{{![\\s\\S]*?}}/,function popState(){this.popState();},['t']],['b',/^{{%([\\s\\S]*?)%}}/,function(){// return to content mode\nthis.text=this.matches[1]||'';this.popState();},['t']],['f',/^{{\\{?~?/,function(){var self=this,text=self.text;if(text.slice(0,3)==='{{{'){self.pushState('p');}else{self.pushState('e');}},['t']],[0,/^\\s+/,0,['p','e']],['g',/^,/,0,['p','e']],['h',/^~?}}}/,function(){this.popState(2);},['p']],['h',/^~?}}/,function(){this.popState(2);},['e']],['i',/^\\(/,0,['p','e']],['j',/^\\)/,0,['p','e']],['k',/^\\|\\|/,0,['p','e']],['l',/^&&/,0,['p','e']],['m',/^===/,0,['p','e']],['n',/^!==/,0,['p','e']],['o',/^>=/,0,['p','e']],['p',/^<=/,0,['p','e']],['q',/^>/,0,['p','e']],['r',/^</,0,['p','e']],['s',/^\\+/,0,['p','e']],['t',/^-/,0,['p','e']],['u',/^\\*/,0,['p','e']],['v',/^\\//,0,['p','e']],['w',/^%/,0,['p','e']],['x',/^!/,0,['p','e']],['y',/^\"(\\\\[\\s\\S]|[^\\\\\"\\n])*\"/,function(){this.text=this.text.slice(1,-1).replace(/\\\\\"/g,'\"');},['p','e']],['y',/^'(\\\\[\\s\\S]|[^\\\\'\\n])*'/,function(){this.text=this.text.slice(1,-1).replace(/\\\\'/g,'\\'');},['p','e']],['z',/^\\d+(?:\\.\\d+)?(?:e-?\\d+)?/i,0,['p','e']],['aa',/^=/,0,['p','e']],['ab',/^\\.\\./,function(){// wait for '/'\nthis.pushState('ws');},['p','e']],['ac',/^\\//,function popState(){this.popState();},['ws']],['ac',/^\\./,0,['p','e']],['ad',/^\\[/,0,['p','e']],['ae',/^\\]/,0,['p','e']],['af',/^\\{/,0,['p','e']],['ag',/^\\:/,0,['p','e']],['ah',/^\\?/,0,['p','e']],['ai',/^\\}/,0,['p','e']],['ab',/^[a-zA-Z_$][a-zA-Z0-9_$]*/,0,['p','e']]]});parser.lexer=lexer;lexer.symbolMap={'$EOF':'a','CONTENT':'b','OPEN_BLOCK':'c','OPEN_CLOSE_BLOCK':'d','INVERSE':'e','OPEN_TPL':'f','COMMA':'g','CLOSE':'h','L_PAREN':'i','R_PAREN':'j','OR':'k','AND':'l','LOGIC_EQUALS':'m','LOGIC_NOT_EQUALS':'n','GE':'o','LE':'p','GT':'q','LT':'r','PLUS':'s','MINUS':'t','MULTIPLY':'u','DIVIDE':'v','MODULUS':'w','NOT':'x','STRING':'y','NUMBER':'z','EQUALS':'aa','ID':'ab','SEP':'ac','L_BRACKET':'ad','R_BRACKET':'ae','L_BRACE':'af','COLON':'ag','QUERY':'ah','R_BRACE':'ai','$START':'aj','program':'ak','statements':'al','statement':'am','function':'an','id':'ao','expression':'ap','params':'aq','hash':'ar','param':'as','conditionalExpression':'at','listExpression':'au','objectExpression':'av','objectPart':'aw','conditionalOrExpression':'ax','conditionalAndExpression':'ay','equalityExpression':'az','relationalExpression':'ba','additiveExpression':'bb','multiplicativeExpression':'bc','unaryExpression':'bd','primaryExpression':'be','hashSegment':'bf','idSegments':'bg'};parser.productions=[['aj',['ak']],['ak',['al','e','al'],function(){return new this.yy.ProgramNode({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1,this.$3);}],['ak',['al'],function(){return new this.yy.ProgramNode({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['al',['am'],function(){return[this.$1];}],['al',['al','am'],function(){var statements=this.$1;var statement=this.$2;if(statements.length){var lastStatement=statements[statements.length-1];if(lastStatement.rtrim&&statement&&statement.type==='contentStatement'&&!statement.value.trim()){}else if(statement.ltrim&&lastStatement&&lastStatement.type==='contentStatement'&&!lastStatement.value.trim()){statements[statements.length-1]=statement;}else{statements.push(statement);}}else{statements.push(statement);}}],['am',['c','an','h','ak','d','ao','h'],function(){var program=this.$4;var openBlock=this.$1;var lastClose=this.$7;var statements=program.statements;var close=this.$3;var openCloseBlock=this.$5;if(close.indexOf('~}')!==-1&&statements[0]&&statements[0].type==='contentStatement'){if(!statements[0].value.trim()){statements.shift();}}if(openCloseBlock.indexOf('{~')!==-1&&statements[statements.length-1]&&statements[statements.length-1].type==='contentStatement'){if(!statements[statements.length-1].value.trim()){statements.pop();}}var statement=new this.yy.BlockStatement({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$2,program,this.$6,this.$1.slice(0,3)!=='{{{');if(openBlock.indexOf('{~')!==-1){statement.ltrim=1;}if(lastClose.indexOf('~}')!==-1){statement.rtrim=1;}return statement;}],['am',['f','ap','h'],function(){var openTpl=this.$1;var close=this.$3;var statement=new this.yy.ExpressionStatement({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$2,this.$1.slice(0,3)!=='{{{');if(openTpl.indexOf('{~')!==-1){statement.ltrim=1;}if(close.indexOf('~}')!==-1){statement.rtrim=1;}return statement;}],['am',['b'],function(){return new this.yy.ContentStatement({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['an',['ao','i','aq','g','ar','j'],function(){return new this.yy.Function({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1,this.$3,this.$5);}],['an',['ao','i','aq','j'],function(){return new this.yy.Function({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1,this.$3);}],['an',['ao','i','ar','j'],function(){return new this.yy.Function({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1,null,this.$3);}],['an',['ao','i','j'],function(){return new this.yy.Function({filename:this.lexer.filename,line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['aq',['aq','g','as'],function(){this.$1.push(this.$3);}],['aq',['as'],function(){return[this.$1];}],['as',['ap']],['ap',['at']],['ap',['ad','au','ae'],function(){return new this.yy.ArrayExpression(this.$2);}],['ap',['ad','ae'],function(){return new this.yy.ArrayExpression([]);}],['ap',['af','av','ai'],function(){return new this.yy.ObjectExpression(this.$2);}],['ap',['af','ai'],function(){return new this.yy.ObjectExpression([]);}],['aw',['y','ag','ap'],function(){return[this.$1,this.$3];}],['aw',['ab','ag','ap'],function(){return[this.$1,this.$3];}],['av',['aw'],function(){return[this.$1];}],['av',['av','g','aw'],function(){this.$1.push(this.$3);}],['au',['ap'],function(){return[this.$1];}],['au',['au','g','ap'],function(){this.$1.push(this.$3);}],['at',['ax']],['at',['ax','ah','ax','ag','at'],function(){return new this.yy.ConditionalExpression(this.$1,this.$3,this.$5);}],['ax',['ay']],['ax',['ax','k','ay'],function(){return new this.yy.ConditionalOrExpression(this.$1,this.$3);}],['ay',['az']],['ay',['ay','l','az'],function(){return new this.yy.ConditionalAndExpression(this.$1,this.$3);}],['az',['ba']],['az',['az','m','ba'],function(){return new this.yy.EqualityExpression(this.$1,'===',this.$3);}],['az',['az','n','ba'],function(){return new this.yy.EqualityExpression(this.$1,'!==',this.$3);}],['ba',['bb']],['ba',['ba','r','bb'],function(){return new this.yy.RelationalExpression(this.$1,'<',this.$3);}],['ba',['ba','q','bb'],function(){return new this.yy.RelationalExpression(this.$1,'>',this.$3);}],['ba',['ba','p','bb'],function(){return new this.yy.RelationalExpression(this.$1,'<=',this.$3);}],['ba',['ba','o','bb'],function(){return new this.yy.RelationalExpression(this.$1,'>=',this.$3);}],['bb',['bc']],['bb',['bb','s','bc'],function(){return new this.yy.AdditiveExpression(this.$1,'+',this.$3);}],['bb',['bb','t','bc'],function(){return new this.yy.AdditiveExpression(this.$1,'-',this.$3);}],['bc',['bd']],['bc',['bc','u','bd'],function(){return new this.yy.MultiplicativeExpression(this.$1,'*',this.$3);}],['bc',['bc','v','bd'],function(){return new this.yy.MultiplicativeExpression(this.$1,'/',this.$3);}],['bc',['bc','w','bd'],function(){return new this.yy.MultiplicativeExpression(this.$1,'%',this.$3);}],['bd',['x','bd'],function(){return new this.yy.UnaryExpression(this.$1,this.$2);}],['bd',['t','bd'],function(){return new this.yy.UnaryExpression(this.$1,this.$2);}],['bd',['be']],['be',['y'],function(){return new this.yy.String({line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['be',['z'],function(){return new this.yy.Number({line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['be',['ao']],['be',['i','ap','j'],function(){return this.$2;}],['ar',['ar','g','bf'],function(){this.$1.value.push(this.$3);}],['ar',['bf'],function(){return new this.yy.Hash({line:this.lexer.firstLine,col:this.lexer.firstColumn},[this.$1]);}],['bf',['ao','aa','ap'],function(){return[this.$1,this.$3];}],['ao',['bg'],function(){return new this.yy.Id({line:this.lexer.firstLine,col:this.lexer.firstColumn},this.$1);}],['bg',['an'],function(){return[this.$1];}],['bg',['bg','ac','ab'],function(){this.$1.push(this.$3);}],['bg',['bg','ad','ap','ae'],function(){this.$1.push(this.$3);}],['bg',['ab'],function(){return[this.$1];}]];parser.table={'gotos':{'0':{'ak':4,'al':5,'am':6},'2':{'an':8,'ao':9,'bg':10},'3':{'an':18,'ao':19,'ap':20,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'5':{'am':31},'11':{'an':18,'ao':19,'ap':36,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'12':{'an':18,'ao':19,'bd':37,'be':29,'bg':10},'13':{'an':18,'ao':19,'bd':38,'be':29,'bg':10},'16':{'an':18,'ao':19,'ap':40,'at':21,'au':41,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'17':{'av':45,'aw':46},'30':{'al':62,'am':6},'32':{'ak':63,'al':5,'am':6},'33':{'an':18,'ao':65,'ap':66,'aq':67,'ar':68,'as':69,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bf':70,'bg':10},'35':{'an':18,'ao':19,'ap':72,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'48':{'an':18,'ao':19,'ay':80,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'49':{'an':18,'ao':19,'ax':81,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'50':{'an':18,'ao':19,'az':82,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'51':{'an':18,'ao':19,'ba':83,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'52':{'an':18,'ao':19,'ba':84,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'53':{'an':18,'ao':19,'bb':85,'bc':27,'bd':28,'be':29,'bg':10},'54':{'an':18,'ao':19,'bb':86,'bc':27,'bd':28,'be':29,'bg':10},'55':{'an':18,'ao':19,'bb':87,'bc':27,'bd':28,'be':29,'bg':10},'56':{'an':18,'ao':19,'bb':88,'bc':27,'bd':28,'be':29,'bg':10},'57':{'an':18,'ao':19,'bc':89,'bd':28,'be':29,'bg':10},'58':{'an':18,'ao':19,'bc':90,'bd':28,'be':29,'bg':10},'59':{'an':18,'ao':19,'bd':91,'be':29,'bg':10},'60':{'an':18,'ao':19,'bd':92,'be':29,'bg':10},'61':{'an':18,'ao':19,'bd':93,'be':29,'bg':10},'62':{'am':31},'74':{'an':18,'ao':19,'ap':101,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'76':{'an':18,'ao':19,'ap':102,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'77':{'an':18,'ao':19,'ap':103,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'78':{'aw':104},'94':{'an':18,'ao':106,'bg':10},'95':{'an':18,'ao':19,'ap':107,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10},'96':{'an':18,'ao':65,'ap':66,'ar':108,'as':109,'at':21,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bf':70,'bg':10},'98':{'an':18,'ao':110,'bf':111,'bg':10},'105':{'an':18,'ao':19,'at':112,'ax':22,'ay':23,'az':24,'ba':25,'bb':26,'bc':27,'bd':28,'be':29,'bg':10}},'action':{'0':{'b':[1,undefined,1],'c':[1,undefined,2],'f':[1,undefined,3]},'1':{'a':[2,7],'e':[2,7],'c':[2,7],'f':[2,7],'b':[2,7],'d':[2,7]},'2':{'ab':[1,undefined,7]},'3':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'4':{'a':[0]},'5':{'a':[2,2],'d':[2,2],'b':[1,undefined,1],'c':[1,undefined,2],'e':[1,undefined,30],'f':[1,undefined,3]},'6':{'a':[2,3],'e':[2,3],'c':[2,3],'f':[2,3],'b':[2,3],'d':[2,3]},'7':{'i':[2,61],'ac':[2,61],'ad':[2,61],'h':[2,61],'ah':[2,61],'k':[2,61],'l':[2,61],'m':[2,61],'n':[2,61],'o':[2,61],'p':[2,61],'q':[2,61],'r':[2,61],'s':[2,61],'t':[2,61],'u':[2,61],'v':[2,61],'w':[2,61],'j':[2,61],'ae':[2,61],'g':[2,61],'aa':[2,61],'ag':[2,61],'ai':[2,61]},'8':{'i':[2,58],'ac':[2,58],'ad':[2,58],'h':[1,undefined,32]},'9':{'i':[1,undefined,33]},'10':{'i':[2,57],'h':[2,57],'ah':[2,57],'k':[2,57],'l':[2,57],'m':[2,57],'n':[2,57],'o':[2,57],'p':[2,57],'q':[2,57],'r':[2,57],'s':[2,57],'t':[2,57],'u':[2,57],'v':[2,57],'w':[2,57],'j':[2,57],'ae':[2,57],'g':[2,57],'aa':[2,57],'ag':[2,57],'ai':[2,57],'ac':[1,undefined,34],'ad':[1,undefined,35]},'11':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'12':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'13':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'14':{'h':[2,50],'ah':[2,50],'k':[2,50],'l':[2,50],'m':[2,50],'n':[2,50],'o':[2,50],'p':[2,50],'q':[2,50],'r':[2,50],'s':[2,50],'t':[2,50],'u':[2,50],'v':[2,50],'w':[2,50],'j':[2,50],'ae':[2,50],'g':[2,50],'ag':[2,50],'ai':[2,50]},'15':{'h':[2,51],'ah':[2,51],'k':[2,51],'l':[2,51],'m':[2,51],'n':[2,51],'o':[2,51],'p':[2,51],'q':[2,51],'r':[2,51],'s':[2,51],'t':[2,51],'u':[2,51],'v':[2,51],'w':[2,51],'j':[2,51],'ae':[2,51],'g':[2,51],'ag':[2,51],'ai':[2,51]},'16':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'ae':[1,undefined,39],'af':[1,undefined,17]},'17':{'y':[1,undefined,42],'ab':[1,undefined,43],'ai':[1,undefined,44]},'18':{'h':[2,58],'ah':[2,58],'i':[2,58],'k':[2,58],'l':[2,58],'m':[2,58],'n':[2,58],'o':[2,58],'p':[2,58],'q':[2,58],'r':[2,58],'s':[2,58],'t':[2,58],'u':[2,58],'v':[2,58],'w':[2,58],'ac':[2,58],'ad':[2,58],'j':[2,58],'ae':[2,58],'g':[2,58],'aa':[2,58],'ag':[2,58],'ai':[2,58]},'19':{'h':[2,52],'ah':[2,52],'k':[2,52],'l':[2,52],'m':[2,52],'n':[2,52],'o':[2,52],'p':[2,52],'q':[2,52],'r':[2,52],'s':[2,52],'t':[2,52],'u':[2,52],'v':[2,52],'w':[2,52],'j':[2,52],'ae':[2,52],'g':[2,52],'ag':[2,52],'ai':[2,52],'i':[1,undefined,33]},'20':{'h':[1,undefined,47]},'21':{'h':[2,15],'j':[2,15],'ae':[2,15],'g':[2,15],'ai':[2,15]},'22':{'h':[2,26],'j':[2,26],'ae':[2,26],'g':[2,26],'ai':[2,26],'k':[1,undefined,48],'ah':[1,undefined,49]},'23':{'h':[2,28],'ah':[2,28],'k':[2,28],'j':[2,28],'ae':[2,28],'g':[2,28],'ag':[2,28],'ai':[2,28],'l':[1,undefined,50]},'24':{'h':[2,30],'ah':[2,30],'k':[2,30],'l':[2,30],'j':[2,30],'ae':[2,30],'g':[2,30],'ag':[2,30],'ai':[2,30],'m':[1,undefined,51],'n':[1,undefined,52]},'25':{'h':[2,32],'ah':[2,32],'k':[2,32],'l':[2,32],'m':[2,32],'n':[2,32],'j':[2,32],'ae':[2,32],'g':[2,32],'ag':[2,32],'ai':[2,32],'o':[1,undefined,53],'p':[1,undefined,54],'q':[1,undefined,55],'r':[1,undefined,56]},'26':{'h':[2,35],'ah':[2,35],'k':[2,35],'l':[2,35],'m':[2,35],'n':[2,35],'o':[2,35],'p':[2,35],'q':[2,35],'r':[2,35],'j':[2,35],'ae':[2,35],'g':[2,35],'ag':[2,35],'ai':[2,35],'s':[1,undefined,57],'t':[1,undefined,58]},'27':{'h':[2,40],'ah':[2,40],'k':[2,40],'l':[2,40],'m':[2,40],'n':[2,40],'o':[2,40],'p':[2,40],'q':[2,40],'r':[2,40],'s':[2,40],'t':[2,40],'j':[2,40],'ae':[2,40],'g':[2,40],'ag':[2,40],'ai':[2,40],'u':[1,undefined,59],'v':[1,undefined,60],'w':[1,undefined,61]},'28':{'h':[2,43],'ah':[2,43],'k':[2,43],'l':[2,43],'m':[2,43],'n':[2,43],'o':[2,43],'p':[2,43],'q':[2,43],'r':[2,43],'s':[2,43],'t':[2,43],'u':[2,43],'v':[2,43],'w':[2,43],'j':[2,43],'ae':[2,43],'g':[2,43],'ag':[2,43],'ai':[2,43]},'29':{'h':[2,49],'ah':[2,49],'k':[2,49],'l':[2,49],'m':[2,49],'n':[2,49],'o':[2,49],'p':[2,49],'q':[2,49],'r':[2,49],'s':[2,49],'t':[2,49],'u':[2,49],'v':[2,49],'w':[2,49],'j':[2,49],'ae':[2,49],'g':[2,49],'ag':[2,49],'ai':[2,49]},'30':{'b':[1,undefined,1],'c':[1,undefined,2],'f':[1,undefined,3]},'31':{'a':[2,4],'e':[2,4],'c':[2,4],'f':[2,4],'b':[2,4],'d':[2,4]},'32':{'b':[1,undefined,1],'c':[1,undefined,2],'f':[1,undefined,3]},'33':{'i':[1,undefined,11],'j':[1,undefined,64],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'34':{'ab':[1,undefined,71]},'35':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'36':{'j':[1,undefined,73]},'37':{'h':[2,48],'ah':[2,48],'k':[2,48],'l':[2,48],'m':[2,48],'n':[2,48],'o':[2,48],'p':[2,48],'q':[2,48],'r':[2,48],'s':[2,48],'t':[2,48],'u':[2,48],'v':[2,48],'w':[2,48],'j':[2,48],'ae':[2,48],'g':[2,48],'ag':[2,48],'ai':[2,48]},'38':{'h':[2,47],'ah':[2,47],'k':[2,47],'l':[2,47],'m':[2,47],'n':[2,47],'o':[2,47],'p':[2,47],'q':[2,47],'r':[2,47],'s':[2,47],'t':[2,47],'u':[2,47],'v':[2,47],'w':[2,47],'j':[2,47],'ae':[2,47],'g':[2,47],'ag':[2,47],'ai':[2,47]},'39':{'h':[2,17],'j':[2,17],'ae':[2,17],'g':[2,17],'ai':[2,17]},'40':{'ae':[2,24],'g':[2,24]},'41':{'g':[1,undefined,74],'ae':[1,undefined,75]},'42':{'ag':[1,undefined,76]},'43':{'ag':[1,undefined,77]},'44':{'h':[2,19],'j':[2,19],'ae':[2,19],'g':[2,19],'ai':[2,19]},'45':{'g':[1,undefined,78],'ai':[1,undefined,79]},'46':{'ai':[2,22],'g':[2,22]},'47':{'a':[2,6],'e':[2,6],'c':[2,6],'f':[2,6],'b':[2,6],'d':[2,6]},'48':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'49':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'50':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'51':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'52':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'53':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'54':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'55':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'56':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'57':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'58':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'59':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'60':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'61':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'62':{'a':[2,1],'d':[2,1],'b':[1,undefined,1],'c':[1,undefined,2],'f':[1,undefined,3]},'63':{'d':[1,undefined,94]},'64':{'h':[2,11],'i':[2,11],'ac':[2,11],'ad':[2,11],'ah':[2,11],'k':[2,11],'l':[2,11],'m':[2,11],'n':[2,11],'o':[2,11],'p':[2,11],'q':[2,11],'r':[2,11],'s':[2,11],'t':[2,11],'u':[2,11],'v':[2,11],'w':[2,11],'j':[2,11],'ae':[2,11],'g':[2,11],'aa':[2,11],'ag':[2,11],'ai':[2,11]},'65':{'g':[2,52],'j':[2,52],'ah':[2,52],'k':[2,52],'l':[2,52],'m':[2,52],'n':[2,52],'o':[2,52],'p':[2,52],'q':[2,52],'r':[2,52],'s':[2,52],'t':[2,52],'u':[2,52],'v':[2,52],'w':[2,52],'i':[1,undefined,33],'aa':[1,undefined,95]},'66':{'g':[2,14],'j':[2,14]},'67':{'g':[1,undefined,96],'j':[1,undefined,97]},'68':{'g':[1,undefined,98],'j':[1,undefined,99]},'69':{'g':[2,13],'j':[2,13]},'70':{'j':[2,55],'g':[2,55]},'71':{'i':[2,59],'ac':[2,59],'ad':[2,59],'h':[2,59],'ah':[2,59],'k':[2,59],'l':[2,59],'m':[2,59],'n':[2,59],'o':[2,59],'p':[2,59],'q':[2,59],'r':[2,59],'s':[2,59],'t':[2,59],'u':[2,59],'v':[2,59],'w':[2,59],'j':[2,59],'ae':[2,59],'g':[2,59],'aa':[2,59],'ag':[2,59],'ai':[2,59]},'72':{'ae':[1,undefined,100]},'73':{'h':[2,53],'ah':[2,53],'k':[2,53],'l':[2,53],'m':[2,53],'n':[2,53],'o':[2,53],'p':[2,53],'q':[2,53],'r':[2,53],'s':[2,53],'t':[2,53],'u':[2,53],'v':[2,53],'w':[2,53],'j':[2,53],'ae':[2,53],'g':[2,53],'ag':[2,53],'ai':[2,53]},'74':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'75':{'h':[2,16],'j':[2,16],'ae':[2,16],'g':[2,16],'ai':[2,16]},'76':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'77':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'78':{'y':[1,undefined,42],'ab':[1,undefined,43]},'79':{'h':[2,18],'j':[2,18],'ae':[2,18],'g':[2,18],'ai':[2,18]},'80':{'h':[2,29],'ah':[2,29],'k':[2,29],'j':[2,29],'ae':[2,29],'g':[2,29],'ag':[2,29],'ai':[2,29],'l':[1,undefined,50]},'81':{'k':[1,undefined,48],'ag':[1,undefined,105]},'82':{'h':[2,31],'ah':[2,31],'k':[2,31],'l':[2,31],'j':[2,31],'ae':[2,31],'g':[2,31],'ag':[2,31],'ai':[2,31],'m':[1,undefined,51],'n':[1,undefined,52]},'83':{'h':[2,33],'ah':[2,33],'k':[2,33],'l':[2,33],'m':[2,33],'n':[2,33],'j':[2,33],'ae':[2,33],'g':[2,33],'ag':[2,33],'ai':[2,33],'o':[1,undefined,53],'p':[1,undefined,54],'q':[1,undefined,55],'r':[1,undefined,56]},'84':{'h':[2,34],'ah':[2,34],'k':[2,34],'l':[2,34],'m':[2,34],'n':[2,34],'j':[2,34],'ae':[2,34],'g':[2,34],'ag':[2,34],'ai':[2,34],'o':[1,undefined,53],'p':[1,undefined,54],'q':[1,undefined,55],'r':[1,undefined,56]},'85':{'h':[2,39],'ah':[2,39],'k':[2,39],'l':[2,39],'m':[2,39],'n':[2,39],'o':[2,39],'p':[2,39],'q':[2,39],'r':[2,39],'j':[2,39],'ae':[2,39],'g':[2,39],'ag':[2,39],'ai':[2,39],'s':[1,undefined,57],'t':[1,undefined,58]},'86':{'h':[2,38],'ah':[2,38],'k':[2,38],'l':[2,38],'m':[2,38],'n':[2,38],'o':[2,38],'p':[2,38],'q':[2,38],'r':[2,38],'j':[2,38],'ae':[2,38],'g':[2,38],'ag':[2,38],'ai':[2,38],'s':[1,undefined,57],'t':[1,undefined,58]},'87':{'h':[2,37],'ah':[2,37],'k':[2,37],'l':[2,37],'m':[2,37],'n':[2,37],'o':[2,37],'p':[2,37],'q':[2,37],'r':[2,37],'j':[2,37],'ae':[2,37],'g':[2,37],'ag':[2,37],'ai':[2,37],'s':[1,undefined,57],'t':[1,undefined,58]},'88':{'h':[2,36],'ah':[2,36],'k':[2,36],'l':[2,36],'m':[2,36],'n':[2,36],'o':[2,36],'p':[2,36],'q':[2,36],'r':[2,36],'j':[2,36],'ae':[2,36],'g':[2,36],'ag':[2,36],'ai':[2,36],'s':[1,undefined,57],'t':[1,undefined,58]},'89':{'h':[2,41],'ah':[2,41],'k':[2,41],'l':[2,41],'m':[2,41],'n':[2,41],'o':[2,41],'p':[2,41],'q':[2,41],'r':[2,41],'s':[2,41],'t':[2,41],'j':[2,41],'ae':[2,41],'g':[2,41],'ag':[2,41],'ai':[2,41],'u':[1,undefined,59],'v':[1,undefined,60],'w':[1,undefined,61]},'90':{'h':[2,42],'ah':[2,42],'k':[2,42],'l':[2,42],'m':[2,42],'n':[2,42],'o':[2,42],'p':[2,42],'q':[2,42],'r':[2,42],'s':[2,42],'t':[2,42],'j':[2,42],'ae':[2,42],'g':[2,42],'ag':[2,42],'ai':[2,42],'u':[1,undefined,59],'v':[1,undefined,60],'w':[1,undefined,61]},'91':{'h':[2,44],'ah':[2,44],'k':[2,44],'l':[2,44],'m':[2,44],'n':[2,44],'o':[2,44],'p':[2,44],'q':[2,44],'r':[2,44],'s':[2,44],'t':[2,44],'u':[2,44],'v':[2,44],'w':[2,44],'j':[2,44],'ae':[2,44],'g':[2,44],'ag':[2,44],'ai':[2,44]},'92':{'h':[2,45],'ah':[2,45],'k':[2,45],'l':[2,45],'m':[2,45],'n':[2,45],'o':[2,45],'p':[2,45],'q':[2,45],'r':[2,45],'s':[2,45],'t':[2,45],'u':[2,45],'v':[2,45],'w':[2,45],'j':[2,45],'ae':[2,45],'g':[2,45],'ag':[2,45],'ai':[2,45]},'93':{'h':[2,46],'ah':[2,46],'k':[2,46],'l':[2,46],'m':[2,46],'n':[2,46],'o':[2,46],'p':[2,46],'q':[2,46],'r':[2,46],'s':[2,46],'t':[2,46],'u':[2,46],'v':[2,46],'w':[2,46],'j':[2,46],'ae':[2,46],'g':[2,46],'ag':[2,46],'ai':[2,46]},'94':{'ab':[1,undefined,7]},'95':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'96':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7],'ad':[1,undefined,16],'af':[1,undefined,17]},'97':{'h':[2,9],'i':[2,9],'ac':[2,9],'ad':[2,9],'ah':[2,9],'k':[2,9],'l':[2,9],'m':[2,9],'n':[2,9],'o':[2,9],'p':[2,9],'q':[2,9],'r':[2,9],'s':[2,9],'t':[2,9],'u':[2,9],'v':[2,9],'w':[2,9],'j':[2,9],'ae':[2,9],'g':[2,9],'aa':[2,9],'ag':[2,9],'ai':[2,9]},'98':{'ab':[1,undefined,7]},'99':{'h':[2,10],'i':[2,10],'ac':[2,10],'ad':[2,10],'ah':[2,10],'k':[2,10],'l':[2,10],'m':[2,10],'n':[2,10],'o':[2,10],'p':[2,10],'q':[2,10],'r':[2,10],'s':[2,10],'t':[2,10],'u':[2,10],'v':[2,10],'w':[2,10],'j':[2,10],'ae':[2,10],'g':[2,10],'aa':[2,10],'ag':[2,10],'ai':[2,10]},'100':{'i':[2,60],'ac':[2,60],'ad':[2,60],'h':[2,60],'ah':[2,60],'k':[2,60],'l':[2,60],'m':[2,60],'n':[2,60],'o':[2,60],'p':[2,60],'q':[2,60],'r':[2,60],'s':[2,60],'t':[2,60],'u':[2,60],'v':[2,60],'w':[2,60],'j':[2,60],'ae':[2,60],'g':[2,60],'aa':[2,60],'ag':[2,60],'ai':[2,60]},'101':{'ae':[2,25],'g':[2,25]},'102':{'ai':[2,20],'g':[2,20]},'103':{'ai':[2,21],'g':[2,21]},'104':{'ai':[2,23],'g':[2,23]},'105':{'i':[1,undefined,11],'t':[1,undefined,12],'x':[1,undefined,13],'y':[1,undefined,14],'z':[1,undefined,15],'ab':[1,undefined,7]},'106':{'h':[1,undefined,113],'i':[1,undefined,33]},'107':{'j':[2,56],'g':[2,56]},'108':{'g':[1,undefined,98],'j':[1,undefined,114]},'109':{'g':[2,12],'j':[2,12]},'110':{'i':[1,undefined,33],'aa':[1,undefined,95]},'111':{'j':[2,54],'g':[2,54]},'112':{'h':[2,27],'j':[2,27],'ae':[2,27],'g':[2,27],'ai':[2,27]},'113':{'a':[2,5],'e':[2,5],'c':[2,5],'f':[2,5],'b':[2,5],'d':[2,5]},'114':{'h':[2,8],'i':[2,8],'ac':[2,8],'ad':[2,8],'ah':[2,8],'k':[2,8],'l':[2,8],'m':[2,8],'n':[2,8],'o':[2,8],'p':[2,8],'q':[2,8],'r':[2,8],'s':[2,8],'t':[2,8],'u':[2,8],'v':[2,8],'w':[2,8],'j':[2,8],'ae':[2,8],'g':[2,8],'aa':[2,8],'ag':[2,8],'ai':[2,8]}}};parser.parse=function parse(input,filename){var state,symbol,ret,action,$$;var self=this;var lexer=self.lexer;var table=self.table;var gotos=table.gotos;var tableAction=table.action;var productions=self.productions;// for debug info\n// for debug info\nvar prefix=filename?'in file: '+filename+' ':'';var valueStack=[];var stateStack=[0];var symbolStack=[];lexer.resetInput(input);while(1){// retrieve state number from top of stack\nstate=peekStack(stateStack);if(!symbol){symbol=lexer.lex();}if(symbol){// read action for current state and first input\naction=tableAction[state]&&tableAction[state][symbol];}else{action=null;}if(!action){var expected=[];var error;//#JSCOVERAGE_IF\n//#JSCOVERAGE_IF\nif(tableAction[state]){each(tableAction[state],function(v,symbolForState){action=v[GrammarConst.TYPE_INDEX];var map=[];map[GrammarConst.SHIFT_TYPE]='shift';map[GrammarConst.REDUCE_TYPE]='reduce';map[GrammarConst.ACCEPT_TYPE]='accept';expected.push(map[action]+':'+self.lexer.mapReverseSymbol(symbolForState));});}error=prefix+'syntax error at line '+lexer.lineNumber+':\\n'+lexer.showDebugInfo()+'\\n'+'expect '+expected.join(', ');throw new Error(error);}switch(action[GrammarConst.TYPE_INDEX]){case GrammarConst.SHIFT_TYPE:symbolStack.push(symbol);valueStack.push(lexer.text);// push state\n// push state\nstateStack.push(action[GrammarConst.TO_INDEX]);// allow to read more\n// allow to read more\nsymbol=null;break;case GrammarConst.REDUCE_TYPE:var production=productions[action[GrammarConst.PRODUCTION_INDEX]];var reducedSymbol=production.symbol||production[0];var reducedAction=production.action||production[2];var reducedRhs=production.rhs||production[1];var len=reducedRhs.length;$$=peekStack(valueStack,len);// default to $$ = $1\n// default to $$ = $1\nret=undefined;self.$$=$$;for(var i=0;i<len;i++){self['$'+(len-i)]=peekStack(valueStack,i+1);}if(reducedAction){ret=reducedAction.call(self);}if(ret!==undefined){$$=ret;}else{$$=self.$$;}var reverseIndex=len*-1;stateStack.splice(reverseIndex,len);valueStack.splice(reverseIndex,len);symbolStack.splice(reverseIndex,len);symbolStack.push(reducedSymbol);valueStack.push($$);var newState=gotos[peekStack(stateStack)][reducedSymbol];stateStack.push(newState);break;case GrammarConst.ACCEPT_TYPE:return $$;}}};return parser;}();if(typeof module!=='undefined'){module.exports=parser;}","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/compiler/ast.js":"'use strict';\n\n/**\n * Ast node class for xtemplate\n */\nvar ast = {};\n\nfunction sameArray(a1, a2) {\n  var l1 = a1.length;\n  var l2 = a2.length;\n  if (l1 !== l2) {\n    return 0;\n  }\n  for (var i = 0; i < l1; i++) {\n    if (a1[i] !== a2[i]) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nast.ProgramNode = function ProgramNode(pos, statements, inverse) {\n  var self = this;\n  self.pos = pos;\n  self.statements = statements;\n  self.inverse = inverse;\n};\n\nast.ProgramNode.prototype.type = 'program';\n\nast.BlockStatement = function BlockStatement(pos, func, program, close, escape) {\n  var closeParts = close.parts;\n  var self = this;\n  var e = void 0;\n  // no close tag\n  if (!sameArray(func.id.parts, closeParts)) {\n    e = 'in file: ' + pos.filename + ' syntax error at line     ' + pos.line + ', col ' + pos.col + ':\\n    expect {{/' + func.id.parts + '}} not {{/' + closeParts + '}}';\n    throw new Error(e);\n  }\n  self.escape = escape;\n  self.pos = pos;\n  self.func = func;\n  self.program = program;\n};\n\nast.BlockStatement.prototype.type = 'blockStatement';\n\nast.ExpressionStatement = function ExpressionStatement(pos, expression, escape) {\n  var self = this;\n  self.pos = pos;\n  self.value = expression;\n  self.escape = escape;\n};\n\nast.ExpressionStatement.prototype.type = 'expressionStatement';\n\nast.ContentStatement = function ContentStatement(pos, value) {\n  var self = this;\n  self.pos = pos;\n  self.value = value || '';\n};\n\nast.ContentStatement.prototype.type = 'contentStatement';\n\nast.UnaryExpression = function UnaryExpression(unaryType, v) {\n  this.value = v;\n  this.unaryType = unaryType;\n};\n\nast.Function = function Function(pos, id, params, hash) {\n  var self = this;\n  self.pos = pos;\n  self.id = id;\n  self.params = params;\n  self.hash = hash;\n};\n\nast.Function.prototype.type = 'function';\n\nast.UnaryExpression.prototype.type = 'unaryExpression';\n\nast.MultiplicativeExpression = function MultiplicativeExpression(op1, opType, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.opType = opType;\n  self.op2 = op2;\n};\n\nast.MultiplicativeExpression.prototype.type = 'multiplicativeExpression';\n\nast.AdditiveExpression = function AdditiveExpression(op1, opType, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.opType = opType;\n  self.op2 = op2;\n};\n\nast.AdditiveExpression.prototype.type = 'additiveExpression';\n\nast.RelationalExpression = function RelationalExpression(op1, opType, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.opType = opType;\n  self.op2 = op2;\n};\n\nast.RelationalExpression.prototype.type = 'relationalExpression';\n\nast.EqualityExpression = function EqualityExpression(op1, opType, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.opType = opType;\n  self.op2 = op2;\n};\n\nast.EqualityExpression.prototype.type = 'equalityExpression';\n\nast.ConditionalAndExpression = function ConditionalAndExpression(op1, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.op2 = op2;\n  self.opType = '&&';\n};\n\nast.ConditionalAndExpression.prototype.type = 'conditionalAndExpression';\n\nast.ConditionalOrExpression = function ConditionalOrExpression(op1, op2) {\n  var self = this;\n  self.op1 = op1;\n  self.op2 = op2;\n  self.opType = '||';\n};\n\nast.ConditionalOrExpression.prototype.type = 'conditionalOrExpression';\n\nast.ConditionalExpression = function ConditionalExpression(op1, op2, op3) {\n  var self = this;\n  self.op1 = op1;\n  self.op2 = op2;\n  self.op3 = op3;\n  self.opType = '?:';\n};\nast.ConditionalExpression.prototype.type = 'conditionalExpression';\n\nast.String = function StringType(pos, value) {\n  var self = this;\n  self.pos = pos;\n  self.value = value;\n};\n\nast.String.prototype.type = 'string';\n\nast.Number = function NumberType(pos, value) {\n  var self = this;\n  self.pos = pos;\n  self.value = value;\n};\n\nast.Number.prototype.type = 'number';\n\nast.Hash = function Hash(pos, value) {\n  var self = this;\n  self.pos = pos;\n  self.value = value;\n};\n\nast.Hash.prototype.type = 'hash';\n\nast.ArrayExpression = function ArrayExpression(list) {\n  this.list = list;\n};\n\nast.ArrayExpression.prototype.type = 'arrayExpression';\n\nast.ObjectExpression = function ObjectExpression(obj) {\n  this.obj = obj;\n};\n\nast.ObjectExpression.prototype.type = 'objectExpression';\n\nast.Id = function Id(pos, raw) {\n  var self = this;\n  var parts = [];\n  var depth = 0;\n  self.pos = pos;\n  for (var i = 0, l = raw.length; i < l; i++) {\n    var p = raw[i];\n    if (p === '..') {\n      depth++;\n    } else {\n      parts.push(p);\n    }\n  }\n  self.parts = parts;\n  self.string = parts.join('.');\n  self.depth = depth;\n};\n\nast.Id.prototype.type = 'id';\n\nmodule.exports = ast;","/home/travis/build/npmtest/node-npmtest-xtemplate/node_modules/xtemplate/lib/compiler/tools.js":"'use strict';\n\n/**\n * compiler tools\n */\nvar doubleReg = /\\\\*\"/g;\nvar singleReg = /\\\\*'/g;\nvar arrayPush = [].push;\nvar globals = {};\nglobals.undefined = globals.null = globals.true = globals.false = 1;\n\nfunction genStackJudge(parts, data) {\n  var count = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n  var lastVariable_ = arguments[3];\n\n  if (!parts.length) {\n    return data;\n  }\n  var lastVariable = lastVariable_ || data;\n  var part0 = parts[0];\n  var variable = 't' + count;\n  return ['(' + data + ' != null ? ', genStackJudge(parts.slice(1), '(' + variable + ' = ' + (lastVariable + part0) + ')', count + 1, variable), ' : ', lastVariable, ')'].join('');\n}\n\nfunction accessVariable(loose, parts, topVariable, fullVariable) {\n  return loose ? genStackJudge(parts.slice(1), topVariable) : fullVariable;\n}\n\nvar tools = module.exports = {\n  genStackJudge: genStackJudge,\n\n  isGlobalId: function isGlobalId(node) {\n    if (globals[node.string]) {\n      return 1;\n    }\n    return 0;\n  },\n  chainedVariableRead: function chainedVariableRead(self, source, idParts, root, resolveUp, loose) {\n    var strs = tools.convertIdPartsToRawAccessor(self, source, idParts);\n    var parts = strs.parts;\n    var part0 = parts[0];\n    var scope = '';\n    if (root) {\n      scope = 'scope.root.';\n    }\n    var affix = scope + 'affix';\n    var data = scope + 'data';\n    var ret = ['(', '(t=(' + (affix + part0) + ')) !== undefined ? ', idParts.length > 1 ? accessVariable(loose, parts, 't', affix + strs.str) : 't', ' : '];\n    if (resolveUp) {\n      ret = ret.concat(['(', '(t = ' + (data + part0) + ') !== undefined ? ', idParts.length > 1 ? accessVariable(loose, parts, 't', data + strs.str) : 't', '  : ', loose ? 'scope.resolveLooseUp(' + strs.arr + ')' : 'scope.resolveUp(' + strs.arr + ')', ')']);\n    } else {\n      ret.push(accessVariable(loose, parts, data + part0, data + strs.str));\n    }\n    ret.push(')');\n    return ret.join('');\n  },\n  convertIdPartsToRawAccessor: function convertIdPartsToRawAccessor(self, source, idParts) {\n    var i = void 0;\n    var l = void 0;\n    var idPart = void 0;\n    var idPartType = void 0;\n    var nextIdNameCode = void 0;\n    var parts = [];\n    var ret = [];\n    var funcRet = '';\n    for (i = 0, l = idParts.length; i < l; i++) {\n      idPart = idParts[i];\n      idPartType = idPart.type;\n      if (idPartType) {\n        nextIdNameCode = self[idPartType](idPart);\n        tools.pushToArray(source, nextIdNameCode.source);\n        if (idPartType === 'function') {\n          funcRet = 1;\n        }\n        ret.push('[ ' + nextIdNameCode.exp + ' ]');\n        parts.push(nextIdNameCode.exp);\n      } else {\n        // literal a.x\n        ret.push('.' + idPart);\n        parts.push(tools.wrapByDoubleQuote(idPart));\n      }\n    }\n    // y().z() =>\n    // var a = y();\n    // a['z']\n    return {\n      str: ret.join(''),\n      arr: '[' + parts.join(',') + ']',\n      parts: ret, funcRet: funcRet,\n      resolvedParts: parts\n    };\n  },\n  wrapByDoubleQuote: function wrapByDoubleQuote(str) {\n    return '\"' + str + '\"';\n  },\n  wrapBySingleQuote: function wrapBySingleQuote(str) {\n    return '\\'' + str + '\\'';\n  },\n  joinArrayOfString: function joinArrayOfString(arr) {\n    return tools.wrapByDoubleQuote(arr.join('\",\"'));\n  },\n  escapeSingleQuoteInCodeString: function escapeSingleQuoteInCodeString(str, isDouble) {\n    return str.replace(isDouble ? doubleReg : singleReg, function (m_) {\n      var m = m_;\n      // \\ 's number ，用户显式转过 \"\\'\" , \"\\\\\\'\" 就不处理了，否则手动对 ` 加 \\ 转义\n      if (m.length % 2) {\n        m = '\\\\' + m;\n      }\n      return m;\n    });\n  },\n  escapeString: function escapeString(str_, isCode) {\n    var str = str_;\n    if (isCode) {\n      str = tools.escapeSingleQuoteInCodeString(str, 0);\n    } else {\n      str = str.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\");\n    }\n    str = str.replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/\\t/g, '\\\\t');\n    return str;\n  },\n  pushToArray: function pushToArray(to, from) {\n    if (from) {\n      arrayPush.apply(to, from);\n    }\n  }\n};"}